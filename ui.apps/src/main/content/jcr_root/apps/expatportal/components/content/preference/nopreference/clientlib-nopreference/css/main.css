
/* Submit Claim page */
#provider-note {
  position: fixed;
  display: none;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
  z-index: 9999; }

#provider-note-container {
  position: absolute;
  top: 50%;
  left: 50%;
  background-color: #FFF;
  transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  width: 50%;
  padding: 25px; }
  @media (max-width: 768px) {
    #provider-note-container {
      position: absolute;
      top: 0;
      left: 0;
      transform: none;
      width: 100%;
      height: 100%; } }

.provider-note-btn {
  cursor: pointer; }

.claim-info #claimInfoTitle {
  margin-bottom: 15px; }

.claim-info .claim-greetings {
  width: 50%; }
  @media only screen and (max-width: 991px) {
    .claim-info .claim-greetings {
      width: 100%; } }

.claim-info-fields {
  margin-top: 30px; }

.note-display {
  background-color: #D3D3D3;
  margin-bottom: 10px;
  padding-top: 10px;
  display: none; }
  .note-display .exclamation-icon {
    padding-left: 22px; }

.claim-note p {
  padding-right: 25px; }

.date-of-service-icon {
  background-color: #ddd;
  font-size: 20px;
  padding: 4px;
  border-radius: 0px 5px 5px 0px; }

#diagDetails {
  font-size: 14px; }

#charTreatmentLimit,
#charDiagnosisLimit {
  font-size: 14px;
  text-align: right; }

.treatForm {
  margin-top: 50px; }

#treatDetails {
  font-size: 14px; }

#lineBtn {
  margin-top: 50px; }

.submit-claim {
  padding-top: 35px; }

.cancel-btn {
  margin-right: 10px;
  padding-bottom: 10px;
  padding-left: 20px;
  padding-right: 20px;
  padding-top: 10px; }

.submit-claim-btn {
  padding-bottom: 10px;
  padding-left: 25px;
  padding-right: 25px;
  padding-top: 10px; }

.button-text {
  font-size: 16px; }

.upload-checkbox-container {
  display: block;
  position: relative;
  padding-left: 30px;
  margin-bottom: 0;
  cursor: pointer;
  font-size: 22px;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none; }
  .upload-checkbox-container .text {
    font-weight: bold;
    font-size: 15px; }
  .upload-checkbox-container input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0; }
  .upload-checkbox-container input:checked ~ .checkmark {
    background-color: #003DA1; }
  .upload-checkbox-container input:checked ~ .checkmark:after {
    display: block; }
  .upload-checkbox-container .checkmark {
    position: absolute;
    top: 2px;
    left: 0;
    height: 20px;
    width: 20px;
    background-color: #FFF;
    border: 3px solid #003DA1; }
  .upload-checkbox-container .checkmark:after {
    content: "";
    position: absolute;
    display: none;
    left: 5px;
    top: 2px;
    width: 5px;
    height: 10px;
    border: solid white;
    border-width: 0 3px 3px 0;
    transform: rotate(45deg); }
  .upload-checkbox-container i {
    color: #003DA1; }

#submit-claim-member-req-msg,
#submit-claim-provider-req-msg,
#submit-claim-provider-char-msg,
#submit-claim-providercountry-req-msg,
#submit-claim-providercountry-invalid-msg,
#submit-claim-providercountry-char-msg,
#submit-claim-providercity-req-msg,
#submit-claim-providercity-char-msg,
#submit-claim-nickname-char-msg,
#submit-claim-billed-amount-req-msg,
#submit-claim-billed-amount-valid-msg,
#submit-claim-billed-amount-greater-msg,
#submit-claim-currency-req-msg,
#submit-claim-currency-invalid-msg,
#submit-claim-currency-char-msg,
#submit-claim-dateservice-req-msg,
#submit-claim-dateservice-future-msg,
#submit-claim-diagnosis-req-msg,
#submit-claim-diagnosis-char-msg,
#submit-claim-treatment-req-msg,
#submit-claim-treatment-char-msg {
  display: none; }

#dateConfirmation {
  font-weight: bolder;
  line-height: 5px; }

.fa-chk {
  margin-left: 40px;
  margin-top: 5px; }

#uploadFilesText {
  margin-left: 30px;
  margin-top: 15px; }

.instructions-text h3 {
  padding-bottom: 15px;
  padding-top: 10px; }

.instructions-text h5 {
  padding-bottom: 5px; }

.instructions-text ol {
  margin-left: 15px;
  padding: 0; }

/*.instructions-text ol li {
  list-style-position: inside;
 text-indent: -1em; }
*/

.dropArea {
  border: 1px solid;
  height: 300px; }

#txtUpload {
  font-size: 14px;
  font-weight: bold;
  margin-top: 100px;
  text-align: center; }

#js-upload-files {
  border: 1px solid; }

.panel-heading {
  background-color: #D3D3D3;
  padding-bottom: 10px;
  padding-top: 10px;
  width: 90%; }

.form-check-input {
  margin-left: 5px; }

.form-check-label {
  margin-left: 35px; }

#drop-area {
  background-color: #f1f1f4;
  height: 300px;
  cursor: pointer;
  padding: 20px;
  overflow-y: auto; }
  @media only screen and (max-width: 768px) {
    #drop-area {
      height: auto;
      min-height: 400px;
      overflow-y: visible; } }
  @media only screen and (max-width: 493px) {
    #drop-area {
      text-align: center; } }

#files .card-container {
  word-wrap: break-word;
  display: inline-flex;
  width: 180px;
  height: 230px;
  padding: 5px; }
  #files .card-container .thumbail-close {
    font-size: 20px;
    font-weight: bolder;
    text-align: right; }
  #files .card-container .filename {
    word-break: break-all;
    font-size: 0.85em;
    text-align: left; }
  #files .card-container .filesize {
    word-break: break-all;
    font-size: 0.65em;
    text-align: left; }
  #files .card-container .thumbnail-img {
    width: 100%;
    height: 110px;
    margin-bottom: 10px;
    vertical-align: middle;
    overflow-y: hidden; }
  #files .card-container .thumbnail-pdf {
    width: 80%;
    height: 110px;
    margin-bottom: 10px;
    vertical-align: middle; }

#fileElem {
  display: none; }

#submit-claim-filename-duplicate-msg {
  display: none; }

#submit-claim-file-size-msg {
  display: none; }

#submit-claim-invalid-file-type-msg {
  display: none; }

#submit-claim-filename-character-msg {
  display: none; }

#submit-claim-attestation-msg {
  display: none; }

#submit-claim-file-required-msg {
  display: none; }

.review-submit-sub-title {
  color: #003DA1; }

.review-submit-col-title {
  display: inline-block; }

#edit-review-submit-title {
  display: none; }

.review-submit-edit-icon {
  color: #000;
  float: right;
  text-decoration: underline;
  cursor: pointer; }
  .review-submit-edit-icon span {
    margin-left: 12px; }
    .review-submit-edit-icon span i {
      color: #fff;
      background-color: #000;
      padding: 2px;
      border-radius: 2px; }

#drop-area-submit-review {
  background-color: #f1f1f4;
  height: 400px;
  padding: 20px;
  overflow-y: auto; }
  @media only screen and (max-width: 768px) {
    #drop-area-submit-review {
      height: auto;
      min-height: 400px;
      overflow-y: visible; } }
  @media only screen and (max-width: 383px) {
    #drop-area-submit-review {
      text-align: center; } }

#files-submit-review .card-container {
  word-wrap: break-word;
  display: inline-flex;
  width: 125px;
  height: 200px;
  padding: 5px; }
  #files-submit-review .card-container .thumbail-close {
    font-size: 20px;
    font-weight: bolder;
    text-align: right; }
  #files-submit-review .card-container .filename {
    word-break: break-all;
    font-size: 0.85em; }
  #files-submit-review .card-container .filesize {
    word-break: break-all;
    font-size: 0.65em; }
  #files-submit-review .card-container .thumbnail-img {
    width: 100%;
    height: 90px;
    margin-bottom: 10px;
    margin-right: 10px;
    vertical-align: middle;
    overflow-y: hidden; }
  #files-submit-review .card-container .thumbnail-pdf {
    width: 80%;
    height: 90px;
    margin-bottom: 10px;
    vertical-align: middle; }

.arrow-up-submit-claim {
  width: 0;
  height: 0;
  margin-left: 110px;
  margin-bottom: -1px;
  border-left: 20px solid transparent;
  border-right: 20px solid transparent;
  border-bottom: 20px solid #f1f1f4; }

.arrow-up-check {
  width: 0;
  height: 0;
  margin-left: 200px;
  margin-bottom: -1px;
  border-left: 20px solid transparent;
  border-right: 20px solid transparent;
  border-bottom: 20px solid #f1f1f4; }

.check-method-text-box {
  background-color: #f1f1f4;
  padding: 5px 15px;
  min-height: 100px; }

.check-method-no-pref-text-box {
  background-color: #f1f1f4;
  padding: 5px 15px;
  min-height: 150px; }

/* The container */
.radio-container {
  display: inline-block;
  position: relative;
  padding-left: 35px;
  margin-bottom: 12px;
  margin-right: 10px;
  cursor: pointer;
  font-size: 18px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none; }
  .radio-container input {
    position: absolute;
    opacity: 0;
    cursor: pointer; }
  .radio-container .checkmark {
    position: absolute;
    top: 0;
    left: 0;
    height: 25px;
    width: 25px;
    background-color: #eee;
    border-radius: 50%; }
  .radio-container .checkmark:after {
    content: "";
    position: absolute;
    display: none; }
  .radio-container:hover input ~ .checkmark {
    background-color: #ccc; }
  .radio-container input:checked ~ .checkmark {
    background-color: #2196F3; }
  .radio-container input:checked ~ .checkmark:after {
    display: block; }

.radio-container .checkmark:after {
  top: 9px;
  left: 9px;
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: white; }

.otp-btn {
  width: 100%;
  font-size: 13px;
  text-transform: none;
  white-space: normal; }

.edit-preference-btn {
  width: 100%;
  font-size: 13px;
  white-space: normal;
  background-color: #003DA1;
  border-color: #003DA1; }

#eft-method {
  display: none; }

#check-method {
  display: none; }

#edit-reimbursement-form {
  display: none; }

#eft-ethod-edit, #eft-method-initial {
  display: none; }

#check-method-edit, #check-method-initial {
  display: none; }

/* #submit-review-payee-name-check-req-msg,
// #submit-review-country-check-req-msg,
// #submit-review-currency-check-req-msg,
// #submit-review-payee-name-eft-req-msg,
// #submit-review-country-eft-req-msg,
// #submit-review-currency-eft-req-msg,
// #submit-review-backname-eft-req-msg {
//     display: none;
// }*/
#method-check-req-msg{
    display: none;
}
#payee-name-check-req-msg,
#payee-name-check-char-msg,
#country-check-req-msg,
#country-check-valid-msg,
#country-check-char-msg,
#currency-check-req-msg,
#currency-check-valid-msg,
#currency-check-char-msg {
    display: none;
}

#payee-name-eft-req-msg,
#payee-name-eft-char-msg,
#country-eft-req-msg,
#country-eft-valid-msg,
#country-eft-char-msg,
#currency-eft-req-msg,
#currency-eft-valid-msg,
#currency-eft-char-msg,
#bankname-eft-req-msg {
    display: none;
}

.hidden-banking-dynamic-field{
    display: none;
}
.hidden-banking-dynamic-container{
    display :none;
}

#reimburement-method-req-msg {
  display: none; }

#initial-bank-details {
  display: none; }

#save-pref-btn {
  width: 100%; }

#cancel-nopref-btn {
  width: 100%; }

.payee-info i {
  color: #003DA1; }

#payee-note {
  position: fixed;
  display: none;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
  z-index: 9999; }

#payee-note-container {
  position: absolute;
  top: 50%;
  left: 50%;
  background-color: #FFF;
  transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  width: 50%;
  padding: 25px; }
  @media (max-width: 768px) {
    #payee-note-container {
      position: absolute;
      top: 0;
      left: 0;
      transform: none;
      width: 100%;
      height: 100%; } }

#save-pref-btn {
  font-size: 16px; }
  @media screen and (max-width: 575px) {
    #save-pref-btn {
      font-size: 12px;
      padding-left: 15px; } }
  @media screen and (max-width: 320px) {
    #save-pref-btn {
      font-size: 10px;
      padding-left: 10px; } }

#cancel-submit-claim-note {
  position: fixed;
  display: none;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.1);
  z-index: 9999; }

#cancel-submit-claim-note-container {
  position: absolute;
  top: 30%;
  left: 50%;
  background-color: #FFF;
  transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  width: 30%;
  padding: 67px 15px;
  z-index: 5;
  transition: visibility 0s, opacity 0.5s linear;
  min-height: 200px;
  border: 0.01em solid rgba(0, 0, 0, 0.3); }
  @media (max-width: 768px) {
    #cancel-submit-claim-note-container {
      width: 70%; } }

/* View Reimbursement page */
.view-reimbursement-cards-container {
  background-color: #eee;
  max-width: 800px;
  padding: 24px 24px; }
  @media screen and (max-width: 577px) {
    .view-reimbursement-cards-container {
      padding: 24px; } }

.reimbursement-details {
  line-height: 1.0; }

#paydate, #paytype, #claimIdList, #dateService {
  font-weight: bold; }

.display-claims-number svg {
  color: #0D880B; }

/* Payment Detail page */
#bank-account {
  font-weight: bold; }

.payment-details {
  line-height: 1.0; }


#claim-submit-flow{
displaye:none;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uc2NzcyIsImJhc2UvX2NvbG9ycy5zY3NzIiwiYmFzZS9fZm9udHMuc2NzcyIsImJhc2UvX3R5cG9ncmFwaHkuc2NzcyIsImJhc2UvX2JyYW5kaW5nLXVoY2cuc2NzcyIsImxheW91dC9fYm9keS5zY3NzIiwibGF5b3V0L19oZWFkZXIuc2NzcyIsImxheW91dC9fZm9vdGVyLnNjc3MiLCJiYXNlL19zcGFjaW5nLnNjc3MiLCJsYXlvdXQvX25hdi5zY3NzIiwiY29tcG9uZW50cy9faWNvbnMuc2NzcyIsImNvbXBvbmVudHMvX3N0YXR1cy5zY3NzIiwiY29tcG9uZW50cy9fY29udGFpbmVycy5zY3NzIiwiY29tcG9uZW50cy9fbGlua3Muc2NzcyIsImNvbXBvbmVudHMvX2NvbnRyb2xzLnNjc3MiLCJjb21wb25lbnRzL19idXR0b25zLnNjc3MiLCJjb21wb25lbnRzL19zZWFyY2gtbWVudS5zY3NzIiwiY29tcG9uZW50cy9fY2hhbmdlLWxvY2F0aW9uLnNjc3MiLCJjb21wb25lbnRzL19yZWZpbmUtcmVzdWx0cy5zY3NzIiwiY29tcG9uZW50cy9wcm9ncmVzcy10cmFja2VyL19wcm9ncmVzcy10cmFja2VyLnNjc3MiLCJjb21wb25lbnRzL3Byb2dyZXNzLXRyYWNrZXIvX3Byb2dyZXNzLXRyYWNrZXItdmFyaWFibGVzLnNjc3MiLCJjb21wb25lbnRzL3Byb2dyZXNzLXRyYWNrZXIvX3Byb2dyZXNzLXRyYWNrZXItYW5pbWF0aW9ucy5zY3NzIiwiY29tcG9uZW50cy9fY2FuY2VsLWNsYWltLnNjc3MiLCJjb21wb25lbnRzL193YXJuaW5nLW1lc3NhZ2Uuc2NzcyIsImNvbXBvbmVudHMvX3N1Ym1pdC1jbGFpbS1tb2RhbC5zY3NzIiwicGFnZXMvaG9tZS5zY3NzIiwicGFnZXMvcHJvdmlkZXItZGV0YWlsLnNjc3MiLCJwYWdlcy9wcm92aWRlci1zZWFyY2gtaG9tZS5zY3NzIiwicGFnZXMvcHJvdmlkZXItc2VhcmNoLW5vLXJlc3VsdC5zY3NzIiwicGFnZXMvcHJvdmlkZXItc2VhcmNoLWFsbC1yZXN1bHQuc2NzcyIsInBhZ2VzL2NsYWltLWluZm9ybWF0aW9uLnNjc3MiLCJwYWdlcy9zdWJtaXQtY29uZmlybWF0aW9uLnNjc3MiLCJwYWdlcy91cGxvYWQtZmlsZXMuc2NzcyIsInBhZ2VzL3Jldmlldy1zdWJtaXQtY2xhaW0uc2NzcyIsInBhZ2VzL2NhbmNlbC1zdWJtaXQtY2xhaW0tbm90ZS5zY3NzIiwicGFnZXMvdmlldy1jbGFpbS5zY3NzIiwicGFnZXMvdmlldy1yZWltYnVyc2VtZW50LnNjc3MiLCJwYWdlcy9wYXltZW50LWRldGFpbC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDBCQUEwQjtBQU0xQiwrQkFBK0I7QUNOL0IsYUFBYTtBQUNiLG9CQUFvQjtBQ0RwQixnQkFBZ0I7QUFNaEIsYUFBYTtBQUNiO0VBQ0ksaUNBQWdDO0VBQ2hDLG9EQUFtRDtFQUFFLHNCQUFzQjtFQUMzRSxvT0FHd0U7RUFBRSxnQkFBZ0IsRUFBQTs7QUFFMUY7RUFDQSx3QkFBdUI7RUFDdkIsa0RBQWlEO0VBQUUsc0JBQXNCO0VBQ3pFLDRSQUdzRTtFQUFFLGdCQUFnQixFQUFBOztBQUV4RjtFQUNBLGdDQUErQjtFQUMvQixrREFBaUQ7RUFBRSxzQkFBc0I7RUFDekUsNFJBR3NFO0VBQUUsZ0JBQWdCLEVBQUE7O0FBRXhGO0VBQ0EsK0JBQThCO0VBQzlCLGlEQUFnRDtFQUFFLHNCQUFzQjtFQUN4RSx3UkFHcUU7RUFBRSxnQkFBZ0IsRUFBQTs7QUFFdkY7RUFDQSxpQ0FBZ0M7RUFDaEMsbURBQWtEO0VBQUUsc0JBQXNCO0VBQzFFLGdTQUd1RTtFQUFFLGdCQUFnQixFQUFBOztBQUV6RjtFQUNBLDZCQUE0QjtFQUM1QiwrQ0FBOEM7RUFBRSxzQkFBc0I7RUFDdEUsZ1JBR21FO0VBQUUsZ0JBQWdCLEVBQUE7O0FBVXJGO0VBQ0ksNkRBQTRELEVBRS9EOztBQUVELGVBQWU7QUFDZjtFQUNJLG1EQUFrRDtFQUNsRCxlRHJFZSxFQ3NFbEI7O0FBQ0Q7RUFD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dEIsaUJBQWdCO0VBQ2hCLG1CQUFrQyxFQUtyQztFQUhHO0lBTEo7TUFNUSxjQUFxQixFQUU1QixFQUFBOztBQUVEO0VBQ0ksaUJBQWdCLEVBQ25COztBQUVEO0VBQ0ksa0JBQWlCLEVBQ3BCOztBQUVEO0VBRVEsZUFBYyxFQUNqQjs7QXBDeUNMLHlCQUF5QjtBcUMvRHpCO0VBQ0ksa0JBQWlCLEVBQ3BCOztBQUVEO0VBQ0ksaUJBQWdCLEVBQ25CIiwiZmlsZSI6Im1haW4uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogVmFyaWFibGVzIGFuZCBNaXhpbnMgKi9cclxuXHJcbi8vQGltcG9ydCAnaGVscGVycy92YXJpYWJsZXMnO1xyXG4vLyBAaW1wb3J0ICdoZWxwZXJzL21peGlucyc7XHJcbi8vIEBpbXBvcnQgJ2hlbHBlcnMvaGVscGVyJztcclxuXHJcbi8qIENvbG9ycywgVHlwb2dyYXBoeSwgSWNvbnMgKi9cclxuQGltcG9ydCAnYmFzZS9jb2xvcnMnO1xyXG5AaW1wb3J0ICdiYXNlL3NwYWNpbmcnO1xyXG5AaW1wb3J0ICdiYXNlL2ZvbnRzJztcclxuQGltcG9ydCAnYmFzZS90eXBvZ3JhcGh5JztcclxuLy9AaW1wb3J0ICdiYXNlL2ljb25zJztcclxuLy8gQGltcG9ydCAndmVuZG9yL2ZvbnQtYXdlc29tZS9mb250YXdlc29tZSc7XHJcbi8vIEBpbXBvcnQgJ3ZlbmRvci9mb250LWF3ZXNvbWUvZmEtc29saWQnO1xyXG4vLyBAaW1wb3J0ICd2ZW5kb3IvZm9udC1hd2Vzb21lL2ZhLXJlZ3VsYXInO1xyXG5AaW1wb3J0ICdiYXNlL2JyYW5kaW5nLXVoY2cnO1xyXG5cclxuLyogTGF5b3V0ICovXHJcbkBpbXBvcnQgJ2xheW91dC9ib2R5JztcclxuQGltcG9ydCAnbGF5b3V0L2hlYWRlcic7XHJcbkBpbXBvcnQgJ2xheW91dC9mb290ZXInO1xyXG5AaW1wb3J0ICdsYXlvdXQvbmF2JztcclxuXHJcbi8qIENvbXBvbmVudHMgKi9cclxuQGltcG9ydCAnY29tcG9uZW50cy9pY29ucyc7XHJcbkBpbXBvcnQgJ2NvbXBvbmVudHMvc3RhdHVzJztcclxuQGltcG9ydCAnY29tcG9uZW50cy9jb250YWluZXJzJztcclxuQGltcG9ydCAnY29tcG9uZW50cy9saW5rcyc7XHJcbkBpbXBvcnQgJ2NvbXBvbmVudHMvY29udHJvbHMnO1xyXG5AaW1wb3J0ICdjb21wb25lbnRzL2J1dHRvbnMnO1xyXG5AaW1wb3J0ICdjb21wb25lbnRzL3NlYXJjaC1tZW51JzsgLy9zZWFyY2gtbWVudVxyXG5AaW1wb3J0ICdjb21wb25lbnRzL19jaGFuZ2UtbG9jYXRpb24nOy8vX2NoYW5nZS1sb2NhdGlvblxyXG5AaW1wb3J0ICdjb21wb25lbnRzL19yZWZpbmUtcmVzdWx0cyc7Ly8gX3JlZmluZS1yZXN1bHRzXHJcbkBpbXBvcnQgJ2NvbXBvbmVudHMvcHJvZ3Jlc3MtdHJhY2tlcic7XHJcbkBpbXBvcnQgJ2NvbXBvbmVudHMvX2NhbmNlbC1jbGFpbSc7XHJcbkBpbXBvcnQgJ2NvbXBvbmVudHMvX3dhcm5pbmctbWVzc2FnZSc7XHJcbkBpbXBvcnQgJ2NvbXBvbmVudHMvc3VibWl0LWNsYWltLW1vZGFsJztcclxuLyogUGFnZSBzcGVjaWZpYyBzdHlsZXNoZWV0cyAqL1xyXG5cclxuXHJcbi8qIENTUyBGYWxsYmFja3MgZm9yIElFICovXHJcblxyXG4vKiBIT01FIHBhZ2UgKi9cclxuQGltcG9ydCAncGFnZXMvaG9tZSc7XHJcblxyXG4vKiBQcm92aWRlciBwYWdlICovXHJcbkBpbXBvcnQgJ3BhZ2VzL3Byb3ZpZGVyLWRldGFpbCc7XHJcbkBpbXBvcnQgJ3BhZ2VzL3Byb3ZpZGVyLXNlYXJjaC1ob21lJztcclxuQGltcG9ydCAncGFnZXMvcHJvdmlkZXItc2VhcmNoLW5vLXJlc3VsdCc7XHJcbkBpbXBvcnQgJ3BhZ2VzL3Byb3ZpZGVyLXNlYXJjaC1hbGwtcmVzdWx0JztcclxuLyogU3VibWl0IENsYWltIHBhZ2UgKi9cclxuQGltcG9ydCAncGFnZXMvY2xhaW0taW5mb3JtYXRpb24nO1xyXG5AaW1wb3J0ICdwYWdlcy9zdWJtaXQtY29uZmlybWF0aW9uJztcclxuQGltcG9ydCAncGFnZXMvdXBsb2FkLWZpbGVzJztcclxuQGltcG9ydCAncGFnZXMvcmV2aWV3LXN1Ym1pdC1jbGFpbSc7XHJcbkBpbXBvcnQgJ3BhZ2VzL2NhbmNlbC1zdWJtaXQtY2xhaW0tbm90ZSc7XHJcblxyXG4vKiBWaWV3IENsYWltIHBhZ2UgKi9cclxuQGltcG9ydCAncGFnZXMvdmlldy1jbGFpbSc7XHJcblxyXG4vKiBWaWV3IFJlaW1idXJzZW1lbnQgcGFnZSAqL1xyXG5AaW1wb3J0ICdwYWdlcy92aWV3LXJlaW1idXJzZW1lbnQnO1xyXG5cclxuLyogUGF5bWVudCBEZXRhaWwgcGFnZSAqL1xyXG5AaW1wb3J0ICdwYWdlcy9wYXltZW50LWRldGFpbCc7IiwiLyoqIENPTE9SUyAqL1xyXG4vKiBQcmltYXJ5IENvbG9ycyAqL1xyXG4kcHJpbWFyeS1jb2xvcjogIzAwM0RBMTtcclxuJGFjY2VudC1jb2xvcjogIzAwYThmNzsgLy8vIGNvbG9yIGZvciBob3ZlciBhbmQgYWN0aXZlXHJcbiRwcmltYXJ5Mi1jb2xvcjogIzBEODgwQjtcclxuJHNlY29uZGFyeS1jb2xvcjogI0ZGRjtcclxuJHRlcnRpYXJ5LWNvbG9yOiAjMkQyRDM5O1xyXG5cclxuLy8gJHByaW1hcnk6ICMxOTZFQ0Y7XHJcbi8vICRzdWNjZXNzOiAjMEQ4ODBCO1xyXG4vLyAkZGFyazogIzJEMkQzOTsiLCIvKiBUeXBvZ3JhcGh5ICovXHJcblxyXG4vLyBWYXJpYWJsZXNcclxuJHRleHQtYm9keTogJ1VIQyBTYW5zIFJlZ3VsYXInLCBBcmlhbCwgc2Fucy1zZXJpZjtcclxuJHRleHQtaGVhZGVyOiAnVUhDIFNhbnMgU2VtaWJvbGQnLCBBcmlhbCwgc2Fucy1zZXJpZjtcclxuXHJcbi8qKiBGb250cyAqKi9cclxuQGZvbnQtZmFjZSB7XHJcbiAgICBmb250LWZhbWlseTogJ09wZW4gU2FucyBSZWd1bGFyJztcclxuICAgIHNyYzogdXJsKCcuLi9mb250cy9PcGVuX1NhbnMvT3BlblNhbnMtUmVndWxhci5lb3QnKTsgLyogSUU5IENvbXBhdCBNb2RlcyAqL1xyXG4gICAgc3JjOiB1cmwoJy4uL2ZvbnRzL09wZW5fU2Fucy9PcGVuU2Fucy1SZWd1bGFyLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksIC8qIElFNi1JRTggKi9cclxuICAgIC8vIHVybCgnLi4vZm9udHMvT3Blbl9TYW5zL09wZW5TYW5zLVJlZ3VsYXIud29mZicpIGZvcm1hdCgnd29mZicpLCAvKiBNb2Rlcm4gQnJvd3NlcnMgKi9cclxuICAgIHVybCgnLi4vZm9udHMvT3Blbl9TYW5zL09wZW5TYW5zLVJlZ3VsYXIudHRmJykgZm9ybWF0KCd0cnVldHlwZScpLCAvKiBTYWZhcmksIEFuZHJvaWQsIGlPUyAqL1xyXG4gICAgdXJsKCcuLi9mb250cy9PcGVuX1NhbnMvT3BlblNhbnMtUmVndWxhci5zdmcjc3ZnRm9udE5hbWUnKSBmb3JtYXQoJ3N2ZycpOyAvKiBMZWdhY3kgaU9TICovfVxyXG4gICAgXHJcbiAgICBAZm9udC1mYWNlIHtcclxuICAgIGZvbnQtZmFtaWx5OiAnVUhDIFNhbnMnO1xyXG4gICAgc3JjOiB1cmwoJy4uL2ZvbnRzL1VIQ19TYW5zL1VIQ1NhbnMtUmVndWxhci5lb3QnKTsgLyogSUU5IENvbXBhdCBNb2RlcyAqL1xyXG4gICAgc3JjOiB1cmwoJy4uL2ZvbnRzL1VIQ19TYW5zL1VIQ1NhbnMtUmVndWxhci5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLCAvKiBJRTYtSUU4ICovXHJcbiAgICB1cmwoJy4uL2ZvbnRzL1VIQ19TYW5zL1VIQ1NhbnMtUmVndWxhci53b2ZmJykgZm9ybWF0KCd3b2ZmJyksIC8qIE1vZGVybiBCcm93c2VycyAqL1xyXG4gICAgdXJsKCcuLi9mb250cy9VSENfU2Fucy9VSENTYW5zLVJlZ3VsYXIudHRmJykgZm9ybWF0KCd0cnVldHlwZScpLCAvKiBTYWZhcmksIEFuZHJvaWQsIGlPUyAqL1xyXG4gICAgdXJsKCcuLi9mb250cy9VSENfU2Fucy9VSENTYW5zLVJlZ3VsYXIuc3ZnI3N2Z0ZvbnROYW1lJykgZm9ybWF0KCdzdmcnKTsgLyogTGVnYWN5IGlPUyAqL31cclxuICAgIFxyXG4gICAgQGZvbnQtZmFjZSB7XHJcbiAgICBmb250LWZhbWlseTogJ1VIQyBTYW5zIFJlZ3VsYXInO1xyXG4gICAgc3JjOiB1cmwoJy4uL2ZvbnRzL1VIQ19TYW5zL1VIQ1NhbnMtUmVndWxhci5lb3QnKTsgLyogSUU5IENvbXBhdCBNb2RlcyAqL1xyXG4gICAgc3JjOiB1cmwoJy4uL2ZvbnRzL1VIQ19TYW5zL1VIQ1NhbnMtUmVndWxhci5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLCAvKiBJRTYtSUU4ICovXHJcbiAgICB1cmwoJy4uL2ZvbnRzL1VIQ19TYW5zL1VIQ1NhbnMtUmVndWxhci53b2ZmJykgZm9ybWF0KCd3b2ZmJyksIC8qIE1vZGVybiBCcm93c2VycyAqL1xyXG4gICAgdXJsKCcuLi9mb250cy9VSENfU2Fucy9VSENTYW5zLVJlZ3VsYXIudHRmJykgZm9ybWF0KCd0cnVldHlwZScpLCAvKiBTYWZhcmksIEFuZHJvaWQsIGlPUyAqL1xyXG4gICAgdXJsKCcuLi9mb250cy9VSENfU2Fucy9VSENTYW5zLVJlZ3VsYXIuc3ZnI3N2Z0ZvbnROYW1lJykgZm9ybWF0KCdzdmcnKTsgLyogTGVnYWN5IGlPUyAqL31cclxuICAgIFxyXG4gICAgQGZvbnQtZmFjZSB7XHJcbiAgICBmb250LWZhbWlseTogJ1VIQyBTYW5zIE1lZGl1bSc7XHJcbiAgICBzcmM6IHVybCgnLi4vZm9udHMvVUhDX1NhbnMvVUhDU2Fucy1NZWRpdW0uZW90Jyk7IC8qIElFOSBDb21wYXQgTW9kZXMgKi9cclxuICAgIHNyYzogdXJsKCcuLi9mb250cy9VSENfU2Fucy9VSENTYW5zLU1lZGl1bS5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLCAvKiBJRTYtSUU4ICovXHJcbiAgICB1cmwoJy4uL2ZvbnRzL1VIQ19TYW5zL1VIQ1NhbnMtTWVkaXVtLndvZmYnKSBmb3JtYXQoJ3dvZmYnKSwgLyogTW9kZXJuIEJyb3dzZXJzICovXHJcbiAgICB1cmwoJy4uL2ZvbnRzL1VIQ19TYW5zL1VIQ1NhbnMtTWVkaXVtLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKSwgLyogU2FmYXJpLCBBbmRyb2lkLCBpT1MgKi9cclxuICAgIHVybCgnLi4vZm9udHMvVUhDX1NhbnMvVUhDU2Fucy1NZWRpdW0uc3ZnI3N2Z0ZvbnROYW1lJykgZm9ybWF0KCdzdmcnKTsgLyogTGVnYWN5IGlPUyAqL31cclxuICAgIFxyXG4gICAgQGZvbnQtZmFjZSB7XHJcbiAgICBmb250LWZhbWlseTogJ1VIQyBTYW5zIFNlbWlCb2xkJztcclxuICAgIHNyYzogdXJsKCcuLi9mb250cy9VSENfU2Fucy9VSENTYW5zLVNlbWlCb2xkLmVvdCcpOyAvKiBJRTkgQ29tcGF0IE1vZGVzICovXHJcbiAgICBzcmM6IHVybCgnLi4vZm9udHMvVUhDX1NhbnMvVUhDU2Fucy1TZW1pQm9sZC5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLCAvKiBJRTYtSUU4ICovXHJcbiAgICB1cmwoJy4uL2ZvbnRzL1VIQ19TYW5zL1VIQ1NhbnMtU2VtaUJvbGQud29mZicpIGZvcm1hdCgnd29mZicpLCAvKiBNb2Rlcm4gQnJvd3NlcnMgKi9cclxuICAgIHVybCgnLi4vZm9udHMvVUhDX1NhbnMvVUhDU2Fucy1TZW1pQm9sZC50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyksIC8qIFNhZmFyaSwgQW5kcm9pZCwgaU9TICovXHJcbiAgICB1cmwoJy4uL2ZvbnRzL1VIQ19TYW5zL1VIQ1NhbnMtU2VtaUJvbGQuc3ZnI3N2Z0ZvbnROYW1lJykgZm9ybWF0KCdzdmcnKTsgLyogTGVnYWN5IGlPUyAqL31cclxuICAgIFxyXG4gICAgQGZvbnQtZmFjZSB7XHJcbiAgICBmb250LWZhbWlseTogJ1VIQyBTYW5zIEJvbGQnO1xyXG4gICAgc3JjOiB1cmwoJy4uL2ZvbnRzL1VIQ19TYW5zL1VIQ1NhbnMtQm9sZC5lb3QnKTsgLyogSUU5IENvbXBhdCBNb2RlcyAqL1xyXG4gICAgc3JjOiB1cmwoJy4uL2ZvbnRzL1VIQ19TYW5zL1VIQ1NhbnMtQm9sZC5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLCAvKiBJRTYtSUU4ICovXHJcbiAgICB1cmwoJy4uL2ZvbnRzL1VIQ19TYW5zL1VIQ1NhbnMtQm9sZC53b2ZmJykgZm9ybWF0KCd3b2ZmJyksIC8qIE1vZGVybiBCcm93c2VycyAqL1xyXG4gICAgdXJsKCcuLi9mb250cy9VSENfU2Fucy9VSENTYW5zLUJvbGQudHRmJykgZm9ybWF0KCd0cnVldHlwZScpLCAvKiBTYWZhcmksIEFuZHJvaWQsIGlPUyAqL1xyXG4gICAgdXJsKCcuLi9mb250cy9VSENfU2Fucy9VSENTYW5zLUJvbGQuc3ZnI3N2Z0ZvbnROYW1lJykgZm9ybWF0KCdzdmcnKTsgLyogTGVnYWN5IGlPUyAqL31cclxuICAgIFxyXG4gICAgLy8gQGZvbnQtZmFjZSB7XHJcbiAgICAvLyBmb250LWZhbWlseTogJ1VIQyBTZXJpZic7XHJcbiAgICAvLyBzcmM6IHVybCgnLi4vZm9udHMvVUhDX1NlcmlmL1VIQ1NlcmlmVGV4dFdlYi1SZWd1bGFyLmVvdCcpOyAvKiBJRTkgQ29tcGF0IE1vZGVzICovXHJcbiAgICAvLyBzcmM6IHVybCgnLi4vZm9udHMvVUhDX1NlcmlmL1VIQ1NlcmlmVGV4dFdlYi1SZWd1bGFyLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksIC8qIElFNi1JRTggKi9cclxuICAgIC8vIHVybCgnLi4vZm9udHMvVUhDX1NlcmlmL1VIQ1NlcmlmVGV4dFdlYi1SZWd1bGFyLndvZmYnKSBmb3JtYXQoJ3dvZmYnKSwgLyogTW9kZXJuIEJyb3dzZXJzICovXHJcbiAgICAvLyB1cmwoJy4uL2ZvbnRzL1VIQ19TZXJpZi9VSENTZXJpZlRleHRXZWItUmVndWxhci50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyksIC8qIFNhZmFyaSwgQW5kcm9pZCwgaU9TICovXHJcbiAgICAvLyB1cmwoJy4uL2ZvbnRzL1VIQ19TZXJpZi9VSENTZXJpZlRleHRXZWItUmVndWxhci5zdmcjc3ZnRm9udE5hbWUnKSBmb3JtYXQoJ3N2ZycpOyAvKiBMZWdhY3kgaU9TICovfVxyXG4gICAgXHJcbiAgICBib2R5IHtcclxuICAgICAgICBmb250LWZhbWlseTogJ1VIQyBTYW5zJywgJ0hlbHZldGljYSBOZXVlJywgQXJpYWwsIHNhbnMtc2VyaWY7XHJcbiAgICAgICAgLy9jb2xvcjogJHRlcnRpYXJ5LWNvbG9yO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAvKiogSGVhZGVycyAqKi9cclxuICAgIGgxIHtcclxuICAgICAgICBmb250LWZhbWlseTogJ1VIQyBTYW5zIFJlZ3VsYXInLCBBcmlhbCwgc2Fucy1zZXJpZjtcclxuICAgICAgICBjb2xvcjogJHByaW1hcnktY29sb3I7XHJcbiAgICB9XHJcbiAgICBoMiwgaDMge1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiAnVUhDIFNhbnMgTWVkaXVtJywgQXJpYWwsIHNhbnMtc2VyaWY7XHJcbiAgICAgICAgY29sb3I6ICRwcmltYXJ5LWNvbG9yO1xyXG4gICAgfVxyXG4gICAgaDQsIGg1LCBoNiB7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6ICdVSEMgU2FucyBCb2xkJywgQXJpYWwsIHNhbnMtc2VyaWY7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIGJsb2NrcXVvdGUge1xyXG4gICAgICAgIHBhZGRpbmc6ICRzcGFjaW5nKjI7XHJcbiAgICB9XHJcbiAgICBcclxuXHJcbiAgICAvKiBUeXBvZ3JhcGh5IEVuZCAqLyIsImgxLCBoMiwgaDMge1xyXG4gICAgY29sb3I6ICRwcmltYXJ5LWNvbG9yO1xyXG59XHJcblxyXG5ibG9ja3F1b3RlIHtcclxuICAgIHBhZGRpbmc6ICRzcGFjaW5nKjI7XHJcbn1cclxuXHJcbmJvZHkge1xyXG4gICAgZm9udC1mYW1pbHk6ICdVSEMgU2FucycsICdIZWx2ZXRpY2EgTmV1ZScsIEFyaWFsLCBzYW5zLXNlcmlmO1xyXG59XHJcblxyXG4vKiBFeHBhdCBQb3J0YWwgVHlwb2dyYXBoeSBTdHlsZXMgKi9cclxuXHJcbi5oZWFkZXItdGV4dCB7XHJcbiAgICBoMSB7XHJcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICBtYXJnaW4tdG9wOiAkc3BhY2luZys1cHg7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIHBhZGRpbmctbGVmdDogMS4yNWVtO1xyXG5cclxuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzVweCkge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuMzVlbTtcclxuICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAxLjI1ZW07XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpIHtcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgICAgICB0b3A6IDAuMWVtO1xyXG4gICAgICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzVweCkge1xyXG4gICAgICAgICAgICAgICAgLy90b3A6IDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG4gICAgXHJcbn1cclxuXHJcbi8qIEVuZCBvZiBFeHBhdCBQb3J0YWwgVHlwb2dyYXBoeSBTdHlsZXMgKi8iLCIuY29udGFpbmVyLWxvZ28ge1xyXG4gICAgcGFkZGluZzogMTVweDtcclxufSIsIlxyXG5odG1sLFxyXG5ib2R5IHtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbn1cclxuXHJcbmJvZHl7XHJcbiAgICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgXHJcbn1cclxuXHJcbi5rLWNvbnRlbnR7XHJcbiAgICBmbGV4OiAxIDAgYXV0bztcclxuICAgIHBhZGRpbmctYm90dG9tOiAxNjFweDtcclxufVxyXG5cclxuLmgtY29udGVudHtcclxuICAgIGZsZXg6IDEgMCBhdXRvO1xyXG4gICAgcGFkZGluZy1ib3R0b206IDUwcHg7XHJcbn0iLCIuaGVhZGVyLWljb24ge1xyXG4gICAgZm9udC1zaXplOiA0MHB4O1xyXG4gICAgY29sb3I6ICRwcmltYXJ5LWNvbG9yO1xyXG59XHJcblxyXG4uaGVhZGVyLWl0ZW0ge1xyXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcclxuICAgIGZvbnQtc2l6ZTogMC44NWVtO1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgIGZvbnQtZmFtaWx5OiAkdGV4dC1oZWFkZXI7XHJcbn1cclxuXHJcbi5sb2dvIHtcclxuICAgIGhlaWdodDogNDVweDtcclxuICAgIG1hcmdpbjogNXB4O1xyXG59XHJcblxyXG4uaGVscCB7XHJcbiAgICBjb2xvcjogJHByaW1hcnktY29sb3I7XHJcbiAgICBpIHtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDVweDtcclxuICAgIH1cclxufVxyXG5cclxuLmFjY291bnQtYnRuIHtcclxuICAgIGJvcmRlci1yYWRpdXM6IDA7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkcHJpbWFyeS1jb2xvcjtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgcGFkZGluZzogMTBweDtcclxufVxyXG5cclxuIiwiLyogRm9vdGVyIFZhcmlhYmxlcyAqL1xyXG4vLyRzcGFjaW5nOiAxNXB4O1xyXG5cclxuLmZvb3Rub3RlIHtcclxuICAgIGZvbnQtc2l6ZTogMC44NWVtO1xyXG59XHJcblxyXG5mb290ZXIge1xyXG5cclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRwcmltYXJ5LWNvbG9yO1xyXG4gICAgZm9udC1zaXplOiAwLjllbTtcclxuXHJcbiAgICAmLmNvcHlyaWdodCB7XHJcbiAgICAgICAgcCB7XHJcbiAgICAgICAgICAgIGNvbG9yOiAjNjU2NTY1O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgcCB7XHJcbiAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIH1cclxuICAgIFxyXG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDMyMHB4KSBhbmQgKG1heC13aWR0aDogMzc0cHgpIHtcclxuICAgICAgICBmb250LXNpemU6IDAuNzVlbTtcclxuICAgICAgICBwYWRkaW5nOiAxNXB4IDI1cHg7XHJcblxyXG4gICAgICAgIFxyXG4gICAgfVxyXG5cclxuICAgIEBtZWRpYSAobWluLXdpZHRoOiAzNzVweCkgYW5kIChtYXgtd2lkdGg6IDc2N3B4KSB7XHJcbiAgICAgICAgZm9udC1zaXplOiAwLjhlbTtcclxuICAgICAgICBwYWRkaW5nOiAxNXB4IDI1cHg7XHJcbiAgICB9XHJcblxyXG4gICAgdWwge1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICB9XHJcbn1cclxuXHJcbi8qKiBmb290ZXIgY29udGVudCAqL1xyXG4gICAgLmZvb3Rlci1saW5rcyB7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMTc0cHgpIHtcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIH1cclxuICAgICAgICB1bCB7XHJcbiAgICAgICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMDtcclxuICAgICAgICAgICAgbGkge1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luOiAwICRzcGFjaW5nO1xyXG5cclxuICAgICAgICAgICAgICAgIGEge1xyXG4gICAgICAgICAgICAgICAgICAgICY6bGluaywgJjp2aXNpdGVkIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICY6Zmlyc3QtY2hpbGQge1xyXG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgJjpsYXN0LWNoaWxkIHtcclxuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTc2cHgpIHsgXHJcbiAgICAgICAgLy8gICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAvLyB9XHJcbiAgICAgICAgLy8gQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTkxcHgpIHtcclxuICAgICAgICAvLyAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgICAgICAgLy8gfVxyXG4gICAgfVxyXG4gICAgLnRleHQtY29weXJpZ2h0IHtcclxuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5OTFweCkge1xyXG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4vKiogZW5kIGZvb3RlciBjb250ZW50ICovIiwiJHNwYWNpbmc6IDE2cHg7IiwiLm5hdi1pdGVte1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcbi5kcm9wZG93bi1pdGVte1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG4uZHJvcGRvd24tbWVudS1mYWxsYmFja3tcclxuICAgdG9wOjk1JTtcclxufVxyXG5cclxuLy8vLy8gTmF2XHJcblxyXG4ubmF2YmFyLWhlYWRlciB7XHJcbiAgICAvLyBtaW4taGVpZ2h0OiA1MHB4O1xyXG4gICAgei1pbmRleDogMjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRwcmltYXJ5LWNvbG9yO1xyXG4gICAgLy8gQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTkycHgpIHtcclxuICAgIC8vICAgICBtaW4taGVpZ2h0OiA1MHB4O1xyXG4gICAgLy8gfVxyXG59XHJcblxyXG4ubmF2LXJvdyB7XHJcbiAgICBsaW5lLWhlaWdodDogNDVweDtcclxufVxyXG5cclxuLm5hdi1oYW1idXJnZXIge1xyXG4gICAgZm9udC1zaXplOiAyM3B4O1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgbWFyZ2luOiAxMHB4IDA7XHJcbiAgICBpIHtcclxuICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgIH1cclxuXHJcbiAgICAvLyAmLmNvbGxhcHNlZCB7XHJcbiAgICAvLyAgICAgbWFyZ2luLXRvcDogMDtcclxuICAgIC8vIH1cclxuXHJcbiAgICAvLyBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5OTJweCkge1xyXG4gICAgLy8gICAgIG1hcmdpbi10b3A6ICRzcGFjaW5nLzM7XHJcbiAgICAvLyB9XHJcbiAgICBcclxufVxyXG5cclxuLm5hdi1saW5rcyB7XHJcbiAgICBmb250LXNpemU6IDAuOGVtO1xyXG4gICAgZm9udC1mYW1pbHk6ICdVSEMgU2FucyBTZW1pYm9sZCc7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgXHJcbiAgICAubmF2LWl0ZW0ge1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogMjVweDtcclxuICAgICAgICBsaW5lLWhlaWdodDogMi4xO1xyXG4gICAgICAgIHBhZGRpbmc6IC4xcmVtIDFyZW07XHJcbiAgICAgICAgXHJcbiAgICAgICAgYSB7XHJcbiAgICAgICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICAgIH1cclxuICAgICAgICBhOmhvdmVyIHtcclxuICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJiAuZHJvcGRvd24tbWVudSB7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRwcmltYXJ5LWNvbG9yO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJi5kcm9wZG93biB7XHJcbiAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDk5MXB4KSB7XHJcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC5uYXYtbGluayB7XHJcbiAgICAgICAgICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5OTJweCkge1xyXG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMCAkc3BhY2luZztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTkycHgpIHtcclxuICAgICAgICAgICAgLy8gcGFkZGluZzogLjJyZW0gMXJlbTtcclxuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwOyAvLyAmOmhvdmVyIHtcclxuICAgICAgICAgICAgLy8gICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgICAgICAgICAvLyB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLm5hdi1pdGVtOmhvdmVyIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYWNjZW50LWNvbG9yO1xyXG4gICAgfVxyXG5cclxuICAgIC5kcm9wZG93bi1tZW51IHtcclxuICAgICAgICBmb250LXNpemU6IDFlbTtcclxuICAgICAgICBmb250LWZhbWlseTogJ1VIQyBTYW5zIFNlbWlib2xkJztcclxuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDA7XHJcbiAgICAgICAgcGFkZGluZzogMDtcclxuICAgICAgICAvL2xlZnQ6IC0xcHg7XHJcbiAgICAgICAgYm9yZGVyOiBub25lO1xyXG4gICAgICAgIC8vIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDk5MnB4KSB7XHJcbiAgICAgICAgLy8gICAgIG1hcmdpbjogMDtcclxuICAgICAgICAvLyB9XHJcblxyXG4gICAgICAgIC5kcm9wZG93bi1pdGVtIHtcclxuICAgICAgICAgICAgLy8gJjpsaW5rLCAmOnZpc2l0ZWQge1xyXG5cclxuICAgICAgICAgICAgLy8gfVxyXG4gICAgICAgICAgICAmOmhvdmVyLCAmOmFjdGl2ZSB7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYWNjZW50LWNvbG9yO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vIEVuYWJsZXMgc3VibWVudXMgdG8gZnVuY3Rpb24gb24gaG92ZXJcclxuICAgIC5kcm9wZG93bjpob3ZlciA+IC5kcm9wZG93bi1tZW51IHtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIH1cclxuICAgIC5kcm9wZG93biA+IC5kcm9wZG93bi10b2dnbGU6YWN0aXZlIHtcclxuICAgICAgICAvKldpdGhvdXQgdGhpcywgY2xpY2tpbmcgd2lsbCBtYWtlIGl0IHN0aWNreSovXHJcbiAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICB9XHJcblxyXG59XHJcbiIsIi8vIFRoaXMgaXMgZm9yIHBhdHRlcm4gbGlicmFyeSBzdHlsZXMgb25seVxyXG5cclxuLnJvdy5pY29uLWRpc3BsYXkge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogJHNwYWNpbmc7XHJcbiAgICAmLmljb25zLWJsYW5rIGltZyB7XHJcbiAgICAgICAgaGVpZ2h0OiAzMnB4O1xyXG4gICAgICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgICAgIC8vbWFyZ2luOiAtMWVtIC0xLjI1ZW07XHJcbiAgICB9XHJcbn1cclxuXHJcbi8vIGVuZCBvZiBwYXR0ZXJuIGxpYnJhcnkgc3R5bGVzXHJcblxyXG4laWNvbi1jb250YWluZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHByaW1hcnktY29sb3I7XHJcbiAgICBoZWlnaHQ6IDQuNWVtO1xyXG4gICAgd2lkdGg6IDQuNWVtO1xyXG4gICAgcGFkZGluZzogMS4yNWVtO1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblxyXG4gICAgaSB7XHJcbiAgICAgICAgZm9udC1zaXplOiAyZW07XHJcbiAgICB9XHJcbn1cclxuXHJcbi5pY29uLWNvbnRhaW5lciB7XHJcbiAgICBAZXh0ZW5kICVpY29uLWNvbnRhaW5lcjtcclxuXHJcbiAgICBpbWcge1xyXG4gICAgICAgIGhlaWdodDogNjRweDtcclxuICAgICAgICB3aWR0aDogYXV0bztcclxuICAgICAgICBtYXJnaW46IC0xZW0gLTEuMjVlbTtcclxuICAgIH1cclxuXHJcbiAgICAubG9nby1iZW5lZml0IHtcclxuICAgICAgICBoZWlnaHQ6IDU0cHg7XHJcbiAgICAgICAgd2lkdGg6IGF1dG87XHJcbiAgICAgICAgbWFyZ2luOiAtMC42ZW0gLTEuNWVtO1xyXG4gICAgfVxyXG59XHJcblxyXG4uaWNvbi1jb250YWluZXItcm91bmRlZCB7XHJcbiAgICBAZXh0ZW5kICVpY29uLWNvbnRhaW5lcjtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxufVxyXG5cclxuLmljb24tY29udGFpbmVyLXJvdW5kZWQubnVtYmVyZWQge1xyXG4gICAgQGV4dGVuZCAlaWNvbi1jb250YWluZXI7XHJcbiAgICBwYWRkaW5nOiAwLjc1ZW0gMC41ZW07XHJcbiAgICBwIHtcclxuICAgICAgICBmb250LXNpemU6IDJlbTtcclxuICAgIH1cclxufVxyXG5cclxuLmljb24tY29udGFpbmVyLXJvdW5kZWQucmVjZWl2ZWQge1xyXG4gICAgQGV4dGVuZCAlaWNvbi1jb250YWluZXI7XHJcbiAgICBwYWRkaW5nOiAxZW0gMC41ZW0gMC41ZW0gMDtcclxuICAgIHN2ZyB7XHJcbiAgICAgICAgaGVpZ2h0OiAyLjVlbTtcclxuICAgICAgICB3aWR0aDogYXV0bztcclxuICAgIH1cclxufVxyXG5cclxuLmljb24tY29udGFpbmVyLXJvdW5kZWQuc3RhdHVzIHtcclxuICAgIEBleHRlbmQgJWljb24tY29udGFpbmVyO1xyXG4gICAgcGFkZGluZzogMWVtIDAuNWVtO1xyXG4gICAgc3ZnIHtcclxuICAgICAgICBoZWlnaHQ6IDIuNWVtO1xyXG4gICAgICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgfVxyXG59XHJcblxyXG4iLCIvKiBJbmZvcm1hdGlvbiBTdGF0ZXMgKi9cclxuXHJcbi5zdGF0ZSB7XHJcbiAgICB1bCB7XHJcbiAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcclxuICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgcGFkZGluZzogMDtcclxuXHJcbiAgICAgICAgbGkge1xyXG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuLnN0YXRlLWluZm8ge1xyXG4gICAgQGV4dGVuZCAuc3RhdGU7XHJcbiAgICBjb2xvcjogJHByaW1hcnktY29sb3I7XHJcbn1cclxuXHJcbi5zdGF0ZS1zdWNjZXNzIHtcclxuICAgIGNvbG9yOiAkcHJpbWFyeTItY29sb3I7XHJcbn1cclxuXHJcbi8qIEVuZCBJbmZvcm1hdGlvbiBTdGF0ZXMgKi8iLCJodG1sLCBib2R5IHtcclxuICAgIGhlaWdodDogMTAwJTtcclxufVxyXG5cclxuYm9keSB7XHJcbiAgICAtanMtZGlzcGxheTogZmxleDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG59XHJcblxyXG5tYWluIHtcclxuICAgIGZsZXg6IDE7XHJcbn1cclxuXHJcbi8qIFF1aWNrbGlua3MgKi9cclxuLnF1aWNrbGlua3Mge1xyXG4gICAgYTpsaW5rLCBhOnZpc2l0ZWQge1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICBib3gtc2hhZG93OiAwcHggMHB4IDBweCAwcHggJGFjY2VudC1jb2xvcjtcclxuICAgICAgICB0cmFuc2l0aW9uOiBib3gtc2hhZG93IDAuM3MgbGluZWFyO1xyXG4gICAgICAgIG1hcmdpbjogMC41ZW07XHJcbiAgICB9XHJcbiAgICBhOmhvdmVyLCBhOmFjdGl2ZSB7XHJcbiAgICAgICAgYm94LXNoYWRvdzogMHB4IDBweCAwcHggNXB4ICRhY2NlbnQtY29sb3I7XHJcbiAgICB9XHJcbiAgICAgIFxyXG4gICAgLnF1aWNrbGluayB7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogJHNwYWNpbmcqNDtcclxuICAgIH1cclxuICAgIC5kZXNjcmlwdGlvbiB7XHJcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgIH1cclxufVxyXG5cclxuLyogRm9yIEhvbWUgcGFnZSBRdWlja2xpbmtzICovXHJcbi5ob21lLXF1aWNrbGlua3Mge1xyXG4gICAgYTpsaW5rLCBhOnZpc2l0ZWQge1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICBib3gtc2hhZG93OiAwcHggMHB4IDBweCAwcHggJGFjY2VudC1jb2xvcjtcclxuICAgICAgICB0cmFuc2l0aW9uOiBib3gtc2hhZG93IDAuM3MgbGluZWFyO1xyXG4gICAgICAgIG1hcmdpbjogMC41ZW07XHJcbiAgICB9XHJcbiAgICBhOmhvdmVyLCBhOmFjdGl2ZSB7XHJcbiAgICAgICAgYm94LXNoYWRvdzogMHB4IDBweCAwcHggNXB4ICRhY2NlbnQtY29sb3I7XHJcbiAgICB9XHJcbiAgICAgIFxyXG4gICAgLnF1aWNrbGluayB7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogJHNwYWNpbmcqMjtcclxuICAgIH1cclxuICAgIC5kZXNjcmlwdGlvbiB7XHJcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgIH1cclxufSIsIi8qIEJhc2ljIExpbmtzICovXHJcbmE6bGluayB7XHJcbiAgICBjb2xvcjogJHByaW1hcnktY29sb3I7XHJcbn1cclxuYTp2aXNpdGVkIHtcclxuICAgIGNvbG9yOiAkcHJpbWFyeS1jb2xvcjtcclxufVxyXG5hOmhvdmVyIHtcclxuICAgIGNvbG9yOiBkYXJrZW4oJHByaW1hcnktY29sb3IsIDIwJSk7XHJcbn1cclxuYTphY3RpdmUge1xyXG4gICAgY29sb3I6ICRwcmltYXJ5LWNvbG9yO1xyXG59IiwiLmNvbnRyb2xzLXBhZ2luYXRpb24ge1xyXG4gICAgbWFyZ2luOiA1cHggMCAxMHB4O1xyXG4gICAgLmRlc2NyaXB0aW9uIHtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6ICRzcGFjaW5nO1xyXG4gICAgfVxyXG4gICAgLmJ0biB7XHJcbiAgICAgICAgLy93aWR0aDogMy4yNWVtO1xyXG4gICAgICAgIHBhZGRpbmc6IDdweCAxMXB4O1xyXG4gICAgICAgIG1pbi13aWR0aDogMDtcclxuICAgIH1cclxufVxyXG5cclxuLyogc2VsZWN0b3IgKi9cclxuLmdyYXBoaWMtc2VsZWN0b3Ige1xyXG4gICAgLnNlbGVjdG9yIHtcclxuICAgICAgICBwYWRkaW5nOiAkc3BhY2luZztcclxuICAgICAgICBib3JkZXI6ICMwMDNEQTEgMXB4IHNvbGlkO1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgIGhlaWdodDogNTVweDtcclxuICAgICAgICBcclxuICAgICAgICBpIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxZW07XHJcbiAgICAgICAgICAgIC8vIHBhZGRpbmctYm90dG9tOiAxZW07XHJcbiAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgc3ZnIHtcclxuICAgICAgICAgICAgLy9mb250LXNpemU6IDJlbTtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxZW07XHJcbiAgICAgICAgICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgICAgICAgICAvLyBtYXJnaW46IDAuNDVlbSAwO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsIi5idG4ge1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDA7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIGZvbnQtc2l6ZTogMC43NWVtO1xyXG4gICAgcGFkZGluZzogMTFweCAxMHB4O1xyXG4gICAgbWluLXdpZHRoOiAxMGVtO1xyXG4gICAgLy8gJjpmb2N1cyB7XHJcbiAgICAvLyAgICAgY29sb3I6ICNmZmY7XHJcbiAgICAvLyB9XHJcbn1cclxuXHJcbi5zdWJtaXQtY2xhaW0tYWN0aW9ucyB7XHJcbiAgICAuYnRuIHtcclxuICAgICAgICBtaW4td2lkdGg6IDE2MHB4O1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMC45ZW07XHJcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDo1NzZweCkge1xyXG4gICAgICAgICAgICBtYXJnaW46ICRzcGFjaW5nLzMgMCAkc3BhY2luZy8zO1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuLmJ0bi1mdWxsLXdpZHRoe1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBmb250LXNpemU6IDAuOWVtO1xyXG59XHJcblxyXG4ubW9kYWwtY2xvc2Uge1xyXG4gICAgaGVpZ2h0OiA1OHB4O1xyXG4gICAgd2lkdGg6IDU4cHg7XHJcbiAgICBtaW4td2lkdGg6IDA7XHJcbiAgICBwYWRkaW5nOiAxcHg7XHJcbiAgICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi9pbWFnZXMvaWNvbi1jbG9zZS5zdmdcIikgMCAwIG5vLXJlcGVhdDtcclxuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICAmOmhvdmVyIHtcclxuICAgICAgICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi9pbWFnZXMvaWNvbi1jbG9zZS1ob3Zlci5zdmdcIikgMCAwIG5vLXJlcGVhdDtcclxuICAgIH1cclxufVxyXG5cclxuLmluZm8tY2xvc2Uge1xyXG4gICAgaGVpZ2h0OiAzOHB4O1xyXG4gICAgd2lkdGg6IDM4cHg7XHJcbiAgICBtaW4td2lkdGg6IDA7XHJcbiAgICBwYWRkaW5nOiAxcHg7XHJcbiAgICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi9pbWFnZXMvaWNvbi1jbG9zZS5zdmdcIikgMCAwIG5vLXJlcGVhdDtcclxuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICAmOmhvdmVyIHtcclxuICAgICAgICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi9pbWFnZXMvaWNvbi1jbG9zZS1ob3Zlci5zdmdcIikgMCAwIG5vLXJlcGVhdDtcclxuICAgIH1cclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6MzIwcHgpIHtcclxuICAgICAgICBoZWlnaHQ6IDI4cHg7XHJcbiAgICAgICAgd2lkdGg6IDI4cHg7XHJcbiAgICB9XHJcbn0iLCIuc2VhcmNoLW1lbnUge1xyXG4gICAgcCB7XHJcbiAgICAgICAgY29sb3I6ICRwcmltYXJ5LWNvbG9yO1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcclxuICAgICAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICB9XHJcbiAgICBhIHtcclxuICAgICAgICAvL2NvbG9yOiAkcHJpbWFyeS1jb2xvcjtcclxuICAgICAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICAgICAgZm9udC1zaXplOiAxNXB4O1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIH1cclxufVxyXG5cclxuLmNvbC1jZW50ZXJlZCB7XHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxuICAgIGZsb2F0OiBub25lO1xyXG59XHJcblxyXG4uc2VhcmNoLWJhci1jb250YWluZXIge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgaW5wdXQge1xyXG4gICAgICAgIHBhZGRpbmc6IDZweDtcclxuICAgICAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMDtcclxuICAgIH1cclxuICAgIGlucHV0OjpwbGFjZWhvbGRlciB7XHJcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgfVxyXG4gICAgLnNlYXJjaC1iYXItYnV0dG9uIHtcclxuICAgICAgICB3aWR0aDogMTQlO1xyXG4gICAgfVxyXG4gICAgYnV0dG9uIHtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAwO1xyXG4gICAgICAgIGNvbG9yOiAkc2Vjb25kYXJ5LWNvbG9yO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRwcmltYXJ5LWNvbG9yO1xyXG4gICAgICAgIHBhZGRpbmc6ICRzcGFjaW5nLzMgJHNwYWNpbmc7XHJcbiAgICAgICAgaSB7XHJcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogNnB4O1xyXG4gICAgICAgICAgICAvL2ZvbnQtc2l6ZTogMjBweDsgLy8gbWlzYWxpZ25zIHRoZSBidXR0b24gdGV4dFxyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuLnNlYXJjaC1zdWdnZXN0aW9uIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDM3cHg7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2VkNGRhO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgbWFyZ2luOiAwIDE1cHg7XHJcbiAgICB6LWluZGV4OiAyO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHNlY29uZGFyeS1jb2xvcjtcclxuICAgIG1heC1oZWlnaHQ6IDI2MHB4O1xyXG4gICAgb3ZlcmZsb3cteTogc2Nyb2xsO1xyXG4gICAgLnNob3ctYWxsLXJlc3VsdDpob3ZlciB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2NlZDRkYTtcclxuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICB9XHJcbiAgICBwIHtcclxuICAgICAgICBjb2xvcjogJHRlcnRpYXJ5LWNvbG9yO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgICB9XHJcbiAgICAuc2VhcmNoLXJlc3VsdHMge1xyXG4gICAgICAgIGEge1xyXG4gICAgICAgICAgICBmb250LXdlaWdodDogbm9ybWFsO1xyXG4gICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbi5zZWFyY2gtY3JpdGVyaWEge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogMjk3cHg7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBtYXJnaW46IDAgMTVweDtcclxuICAgIHotaW5kZXg6IDI7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Vjb25kYXJ5LWNvbG9yO1xyXG4gICAgcCB7IFxyXG4gICAgICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgICAgICBjb2xvcjogcmVkO1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiA1cHg7XHJcbiAgICB9XHJcbn0iLCIjY2hhbmdlLWxvY2F0aW9uIHtcclxuICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgZGlzcGxheTogbm9uZTtcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgdG9wOiAwOyBcclxuICBsZWZ0OiAwO1xyXG4gIHJpZ2h0OiAwO1xyXG4gIGJvdHRvbTogMDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNSk7XHJcbiAgei1pbmRleDogOTk5OTtcclxufVxyXG5cclxuI2NoYW5nZS1sb2NhdGlvbi1jb250YWluZXIge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDUwJTtcclxuICBsZWZ0OiA1MCU7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogJHNlY29uZGFyeS1jb2xvcjtcclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcclxuICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XHJcbiAgd2lkdGg6IDY1JTtcclxuICBwYWRkaW5nOiAyNXB4O1xyXG59XHJcblxyXG4uY2hhbmdlLWxvY2F0aW9uLWNvbnRhaW5lciB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogNTAlO1xyXG4gIGxlZnQ6IDUwJTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Vjb25kYXJ5LWNvbG9yO1xyXG59XHJcblxyXG4ubG9jYXRpb24tY2xvc2Uge1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuLmxvY2F0aW9uLWRyb3Bkb3duIHtcclxuICBsYWJlbCB7XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICBjb2xvcjogZ3JheTtcclxuICB9XHJcbiAgc2VsZWN0IHtcclxuICAgIGJvcmRlci1yYWRpdXM6IDA7XHJcbiAgICBoZWlnaHQ6IDMxcHg7XHJcbiAgICBwYWRkaW5nOiA0cHggMTBweDtcclxuICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICB9XHJcbiAgaW5wdXQge1xyXG4gICAgYm9yZGVyLXJhZGl1czogMDtcclxuICAgIGhlaWdodDogMzFweDtcclxuICAgIHBhZGRpbmc6IDRweCAxMHB4O1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG4gIH1cclxuICBzcGFuIHtcclxuICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICAgIGNvbG9yOiByZWQ7XHJcbiAgfVxyXG59XHJcblxyXG4ubG9jYXRpb24tYnV0dG9uIHtcclxuICBidXR0b24ge1xyXG4gICAgYm9yZGVyLXJhZGl1czogMDtcclxuICAgIG1hcmdpbjogNXB4IDVweDtcclxuICAgIGZvbnQtc2l6ZTogMTFweDtcclxuICB9XHJcbn1cclxuQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgI2NoYW5nZS1sb2NhdGlvbi1jb250YWluZXIge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHRyYW5zZm9ybTogbm9uZTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gIH1cclxufSIsIi5yZWZpbmUtdGl0bGV7XHJcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuXHJcbi5hY2NvcmRpb24ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2VlZTtcclxuICAgIGNvbG9yOiAjNDQ0O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICB0cmFuc2l0aW9uOiAwLjRzO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogJHNwYWNpbmcvMyoyO1xyXG59XHJcbiAgXHJcbiAgLmFjY29yZGlvbi1hY3RpdmUsIC5hY2NvcmRpb246aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2NjYztcclxuICB9XHJcbiAgXHJcbiAgLmFjY29yZGlvbjphZnRlciB7XHJcbiAgICBjb250ZW50OiAnXFwwMDJCJztcclxuICAgIGNvbG9yOiAjNzc3O1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICBmbG9hdDogcmlnaHQ7XHJcbiAgICBtYXJnaW4tbGVmdDogNXB4O1xyXG4gIH1cclxuICBcclxuICAuYWNjb3JkaW9uLWFjdGl2ZTphZnRlciB7XHJcbiAgICBjb250ZW50OiBcIlxcMjIxMlwiO1xyXG4gIH1cclxuICBcclxuLnBhbmVsIHtcclxuICAgIHBhZGRpbmc6IDAgMThweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG4gICAgbWF4LWhlaWdodDogMDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICB0cmFuc2l0aW9uOiBtYXgtaGVpZ2h0IDAuMnMgZWFzZS1vdXQ7XHJcbn1cclxuXHJcbi5wYW5lbC1jYWxlbmRhciB7XHJcbiAgICBwYWRkaW5nOiAwIDE4cHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuICAgIG1heC1oZWlnaHQ6IDA7XHJcbiAgICBvdmVyZmxvdzogdmlzaWJsZTtcclxuICAgIHRyYW5zaXRpb246IG1heC1oZWlnaHQgMC4ycyBlYXNlLW91dDtcclxuXHJcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzdweCkge1xyXG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICB9XHJcbn1cclxuXHJcbi5jaGFuZ2UtbG9jYXRpb24tcmVmaW5lLXJlc3VsdC1idG57XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcclxufVxyXG5cclxuLnJlZmluZS1jaGVja2JveC1jb250YWluZXIge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDMwcHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgZm9udC1zaXplOiAyMnB4O1xyXG4gICAgdXNlci1zZWxlY3Q6IG5vbmU7XHJcbiAgICAudGV4dHtcclxuICAgICAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICB9XHJcbiAgICBpbnB1dCB7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgIGhlaWdodDogMDtcclxuICAgICAgICB3aWR0aDogMDtcclxuICAgIH1cclxuICAgIGlucHV0OmNoZWNrZWQgfiAuY2hlY2ttYXJrIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkcHJpbWFyeS1jb2xvcjtcclxuICAgIH1cclxuICAgIGlucHV0OmNoZWNrZWQgfiAuY2hlY2ttYXJrOmFmdGVyIHtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIH1cclxuICAgIC5jaGVja21hcmsge1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB0b3A6IDEwcHg7XHJcbiAgICAgICAgbGVmdDogMDtcclxuICAgICAgICBoZWlnaHQ6IDIwcHg7XHJcbiAgICAgICAgd2lkdGg6IDIwcHg7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHNlY29uZGFyeS1jb2xvcjtcclxuICAgICAgICBib3JkZXI6IDNweCBzb2xpZCAkcHJpbWFyeS1jb2xvcjtcclxuICAgIH1cclxuICAgIC5jaGVja21hcms6YWZ0ZXIge1xyXG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgbGVmdDogNXB4O1xyXG4gICAgICAgIHRvcDogMnB4O1xyXG4gICAgICAgIHdpZHRoOiA1cHg7XHJcbiAgICAgICAgaGVpZ2h0OiAxMHB4O1xyXG4gICAgICAgIGJvcmRlcjogc29saWQgd2hpdGU7XHJcbiAgICAgICAgYm9yZGVyLXdpZHRoOiAwIDNweCAzcHggMDtcclxuICAgICAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcclxuICAgICAgICAtbXMtdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xyXG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcclxuICAgIH1cclxuICAgIGkge1xyXG4gICAgICAgY29sb3I6ICMwMDNEQTE7XHJcbiAgICB9XHJcbn1cclxuXHJcbiIsIi8vIC0tLS0tIFByb2dyZXNzIFRyYWNrZXIgLS0tLS1cclxuXHJcblxyXG4vLyAtLS0tLSBFbGVtZW50cyAtLS0tLVxyXG5cclxuLy8gQ29udGFpbmVyIGVsZW1lbnRcclxuLnByb2dyZXNzLXRyYWNrZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgbWFyZ2luOiA0MHB4IGF1dG87XHJcbiAgcGFkZGluZzogMDtcclxuICBsaXN0LXN0eWxlOiBub25lO1xyXG4gIGEge1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gIH1cclxufVxyXG5cclxuLy8gU3RlcCBjb250YWluZXIgdGhhdCBjcmVhdGVzIGxpbmVzIGJldHdlZW4gc3RlcHNcclxuICAucHJvZ3Jlc3Mtc3RlcCB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGZsZXg6IDEgMSAwJTtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgICBtaW4td2lkdGg6ICRtYXJrZXItc2l6ZTsgLy8gRm9yIGEgZmxleGJveCBidWcgaW4gZmlyZWZveCB0aGF0IHdvbnQgYWxsb3cgdGhlIHRleHQgb3ZlcmZsb3cgb24gdGhlIHRleHRcclxuXHJcbiAgICAvLyBTdG9wcyB0aGUgbGFzdCBzdGVwIGdyb3dpbmdcclxuICAgICY6bGFzdC1jaGlsZCB7XHJcbiAgICAgIGZsZXgtZ3JvdzogMDtcclxuICAgIH1cclxuXHJcbiAgICAvLyBQYXRoIGJldHdlZW4gbWFya2VycywgdGhpcyBpcyBub3QgY3JlYXRlZCBmb3IgdGhlIGxhc3Qgc3RlcFxyXG4gICAgJjpub3QoOmxhc3QtY2hpbGQpOjphZnRlciB7XHJcbiAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICB6LWluZGV4OiAtMTA7XHJcbiAgICAgIHRvcDogJHBhdGgtcG9zaXRpb247XHJcbiAgICAgIGJvdHRvbTogJHBhdGgtcG9zaXRpb247XHJcbiAgICAgIHJpZ2h0OiAtICRtYXJrZXItc2l6ZS1oYWxmO1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgaGVpZ2h0OiAkcGF0aC1oZWlnaHQ7XHJcbiAgICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgJGFuaW1hdGlvbi1kdXJhdGlvbjtcclxuICAgIH1cclxuXHJcbiAgICAvLyBBY3RpdmUgc3RhdGVcclxuICAgICYuaXMtYWN0aXZlIHtcclxuICAgICAgLnByb2dyZXNzLXRpdGxlIHtcclxuICAgICAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgPiBhIHtcclxuICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB9XHJcblxyXG4gIH1cclxuXHJcbi8vIFByb2dyZXNzIG1hcmtlclxyXG4gICAgLnByb2dyZXNzLW1hcmtlciB7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgIHotaW5kZXg6IDIwO1xyXG4gICAgICB3aWR0aDogJG1hcmtlci1zaXplO1xyXG4gICAgICBoZWlnaHQ6ICRtYXJrZXItc2l6ZTtcclxuICAgICAgcGFkZGluZy1ib3R0b206IDJweDsgLy8gVG8gYWxpZ24gdGV4dCB3aXRoaW4gdGhlIG1hcmtlclxyXG4gICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgLy9mb250LXdlaWdodDogNDAwO1xyXG4gICAgICBib3JkZXI6IDJweCBzb2xpZCB0cmFuc3BhcmVudDtcclxuICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yLCBib3JkZXItY29sb3I7XHJcbiAgICAgIHRyYW5zaXRpb24tZHVyYXRpb246ICRhbmltYXRpb24tZHVyYXRpb247XHJcbiAgICB9XHJcblxyXG5cclxuLy8gUHJvZ3Jlc3MgdGV4dFxyXG4gIC5wcm9ncmVzcy10ZXh0IHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgcGFkZGluZzogJHRleHQtcGFkZGluZy1ZICR0ZXh0LXBhZGRpbmctWDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxuICB9XHJcbiAgICAucHJvZ3Jlc3MtdGl0bGUge1xyXG4gICAgICBtYXJnaW4tdG9wOiAwO1xyXG5cclxuICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTQwcHgpIHtcclxuICAgICAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuXHJcbi8vIFN0ZXAgc3RhdGUgbWl4aW4gLSBUaGUgZmlyc3QgYXJ1Z21lbnQgaXMgcmVxdWlyZWQgYW5kIHRoZSByZXN0IGFyZSBvcHRpb25hbCwgaWYgeW91IHBhc3MgaW4gbnVsbCB0aGUgdmFsdWUgd2lsbCBub3QgYmUgY2hhbmdlZC5cclxuQG1peGluIHByb2dyZXNzLXN0YXRlKCRtYXJrZXItY29sb3ItYmcsICRtYXJrZXItY29sb3ItYm9yZGVyOiBudWxsLCAkbWFya2VyLWNvbG9yLXRleHQ6IG51bGwsICRwYXRoLWNvbG9yOiBudWxsLCAkdGV4dC1jb2xvcjogbnVsbCkge1xyXG4gIC5wcm9ncmVzcy1tYXJrZXIge1xyXG4gICAgY29sb3I6ICRtYXJrZXItY29sb3ItdGV4dDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRtYXJrZXItY29sb3ItYmc7XHJcbiAgICBib3JkZXItY29sb3I6ICRtYXJrZXItY29sb3ItYm9yZGVyO1xyXG4gIH1cclxuXHJcbiAgJjo6YWZ0ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHBhdGgtY29sb3I7XHJcbiAgfVxyXG5cclxuICAucHJvZ3Jlc3MtdGV4dCwgLnByb2dyZXNzLXN0ZXAgPiBhIC5wcm9ncmVzcy10ZXh0IHtcclxuICAgIGNvbG9yOiAkdGV4dC1jb2xvcjtcclxuICB9XHJcbn1cclxuXHJcblxyXG4vLyBTdGF0ZXNcclxuICAucHJvZ3Jlc3Mtc3RlcCB7XHJcblxyXG4gICAgLy8gSW5hY3RpdmUgLSBEZWZhdWx0IHN0YXRlXHJcbiAgICBAaW5jbHVkZSBwcm9ncmVzcy1zdGF0ZSgkcHJvZ3Jlc3MtY29sb3ItZ3JleS1saWdodCwgbnVsbCwgI2ZmZiwgJHByb2dyZXNzLWNvbG9yLWdyZXktbGlnaHQsICRwcm9ncmVzcy1jb2xvci1ncmV5LWRhcmspO1xyXG5cclxuICAgIC8vIEFjdGl2ZSBzdGF0ZVxyXG4gICAgJi5pcy1hY3RpdmUge1xyXG4gICAgICBAaW5jbHVkZSBwcm9ncmVzcy1zdGF0ZSgkcHJvZ3Jlc3MtY29sb3IpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIENvbXBsZXRlIHN0YXRlXHJcbiAgICAmLmlzLWNvbXBsZXRlIHtcclxuICAgICAgQGluY2x1ZGUgcHJvZ3Jlc3Mtc3RhdGUoJHByb2dyZXNzLWNvbG9yLWRhcmssICRwYXRoLWNvbG9yOiAkcHJvZ3Jlc3MtY29sb3ItZ3JleSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gSG92ZXIgc3RhdGVcclxuICAgICY6aG92ZXIge1xyXG4gICAgICBAaW5jbHVkZSBwcm9ncmVzcy1zdGF0ZSgkcHJvZ3Jlc3MtY29sb3ItbGlnaHQpO1xyXG4gICAgfVxyXG5cclxuICB9XHJcblxyXG5cclxuXHJcbi8vIC0tLS0tIE1vZGlmaWVycyAtLS0tLVxyXG5cclxuLy8gQ2VudGVyIGFsaWduIG1hcmtlcnMgYW5kIHRleHRcclxuLnByb2dyZXNzLXRyYWNrZXItLWNlbnRlciB7XHJcblxyXG4gIC5wcm9ncmVzcy1zdGVwIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHJcbiAgICAmOmxhc3QtY2hpbGQge1xyXG4gICAgICBmbGV4LWdyb3c6IDE7XHJcbiAgICB9XHJcblxyXG4gICAgJjo6YWZ0ZXIge1xyXG4gICAgICByaWdodDogLTUwJTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gICAgLnByb2dyZXNzLW1hcmtlciB7XHJcbiAgICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gICAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG4vLyBSaWdodCBhbGlnbiBtYXJrZXJzIGFuZCB0ZXh0XHJcbi5wcm9ncmVzcy10cmFja2VyLS1yaWdodCB7XHJcblxyXG4gIC5wcm9ncmVzcy1zdGVwIHtcclxuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xyXG5cclxuICAgICY6bGFzdC1jaGlsZCB7XHJcbiAgICAgIGZsZXgtZ3JvdzogMTtcclxuICAgIH1cclxuXHJcbiAgICAmOjphZnRlciB7XHJcbiAgICAgIHJpZ2h0OiBjYWxjKC0xMDAlICsgI3skbWFya2VyLXNpemUtaGFsZn0pO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgICAucHJvZ3Jlc3MtbWFya2VyIHtcclxuICAgICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG4vLyBCb3JkZXIgYXJvdW5kIHN0ZXBzIChPbmx5IGZvciB1c2Ugd2l0aG91dCB0ZXh0KVxyXG4ucHJvZ3Jlc3MtdHJhY2tlci0tYm9yZGVyIHtcclxuICBwYWRkaW5nOiAkcHJvZ3Jlc3MtdHJhY2tlci1wYWRkaW5nO1xyXG4gIGJvcmRlcjogMnB4IHNvbGlkICRwcm9ncmVzcy1jb2xvci1ncmV5O1xyXG4gIGJvcmRlci1yYWRpdXM6ICRtYXJrZXItc2l6ZSArICgkcHJvZ3Jlc3MtdHJhY2tlci1wYWRkaW5nICogMik7XHJcbn1cclxuXHJcblxyXG4vLyBTcGFjZXMgYmV0d2VlbiBtYXJrZXJzXHJcbi5wcm9ncmVzcy10cmFja2VyLS1zcGFjZWQge1xyXG5cclxuICAucHJvZ3Jlc3Mtc3RlcCB7XHJcblxyXG4gICAgJjo6YWZ0ZXIge1xyXG4gICAgICB3aWR0aDogY2FsYygxMDAlIC0gI3skbWFya2VyLXNpemUgKyAoJG1hcmtlci1zcGFjaW5nICogMil9KTtcclxuICAgICAgbWFyZ2luLXJpZ2h0OiAoJG1hcmtlci1zaXplLWhhbGYgKyAkbWFya2VyLXNwYWNpbmcpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbn1cclxuXHJcblxyXG4vLyBXb3JkIGJlbG93IG1hcmtlcnNcclxuLnByb2dyZXNzLXRyYWNrZXItLXdvcmQge1xyXG4gIHBhZGRpbmctcmlnaHQ6ICRwcm9ncmVzcy10cmFja2VyLXdvcmQtcGFkZGluZztcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG5cclxuICAucHJvZ3Jlc3MtdGV4dCB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gIH1cclxuXHJcbiAgICAucHJvZ3Jlc3MtdGl0bGUge1xyXG4gICAgICBtYXJnaW46IDA7XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG5cclxuLnByb2dyZXNzLXRyYWNrZXItLXdvcmQtY2VudGVyIHtcclxuICBwYWRkaW5nLXJpZ2h0OiAkcHJvZ3Jlc3MtdHJhY2tlci13b3JkLXBhZGRpbmc7XHJcbiAgcGFkZGluZy1sZWZ0OiAkcHJvZ3Jlc3MtdHJhY2tlci13b3JkLXBhZGRpbmc7XHJcblxyXG4gIC5wcm9ncmVzcy10ZXh0IHtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDA7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDA7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoY2FsYygtNTAlICsgI3skbWFya2VyLXNpemUtaGFsZn0pKTtcclxuICB9XHJcblxyXG59XHJcblxyXG5cclxuLnByb2dyZXNzLXRyYWNrZXItLXdvcmQtcmlnaHQge1xyXG4gIHBhZGRpbmctcmlnaHQ6IDA7XHJcbiAgcGFkZGluZy1sZWZ0OiAkcHJvZ3Jlc3MtdHJhY2tlci13b3JkLXBhZGRpbmc7XHJcblxyXG4gIC5wcm9ncmVzcy10ZXh0IHtcclxuICAgIHBhZGRpbmctbGVmdDogMDtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWChjYWxjKC0xMDAlICsgI3skbWFya2VyLXNpemV9KSk7XHJcbiAgfVxyXG5cclxufVxyXG5cclxuXHJcbi8vIFRleHQgYmVsb3cgbWFya2Vyc1xyXG4ucHJvZ3Jlc3MtdHJhY2tlci0tdGV4dCB7XHJcblxyXG4gIC5wcm9ncmVzcy1zdGVwIHtcclxuXHJcbiAgICAmOmxhc3QtY2hpbGQge1xyXG4gICAgICBmbGV4LWdyb3c6IDE7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxufVxyXG5cclxuXHJcbi8vIFRleHQgYWJvdmUgbWFya2Vyc1xyXG4ucHJvZ3Jlc3MtdHJhY2tlci0tdGV4dC10b3Age1xyXG5cclxuICAucHJvZ3Jlc3Mtc3RlcDo6YWZ0ZXIge1xyXG4gICAgdG9wOiBhdXRvO1xyXG4gIH1cclxuXHJcbiAgICAucHJvZ3Jlc3MtdGV4dCB7XHJcbiAgICAgIGhlaWdodDogMTAwJTtcclxuICAgIH1cclxuXHJcbiAgICAucHJvZ3Jlc3MtbWFya2VyIHtcclxuICAgICAgYm90dG9tOiAkbWFya2VyLXNpemU7XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG5cclxuLy8gVGV4dCBpbmxpbmUgd2l0aCBtYXJrZXJzXHJcbi5wcm9ncmVzcy10cmFja2VyLS10ZXh0LWlubGluZSB7XHJcblxyXG4gIC5wcm9ncmVzcy1zdGVwIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgfVxyXG5cclxuICAgIC5wcm9ncmVzcy10ZXh0IHtcclxuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICB6LWluZGV4OiAzMDtcclxuICAgICAgbWF4LXdpZHRoOiA3MCU7XHJcbiAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICAgIHBhZGRpbmctdG9wOiAwO1xyXG4gICAgICBwYWRkaW5nLWJvdHRvbTogMDtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgIH1cclxuXHJcbiAgICAgIC5wcm9ncmVzcy10aXRsZSB7XHJcbiAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICB9XHJcblxyXG59XHJcblxyXG5cclxuLy8gU3F1YXJlIG1hcmtlcnNcclxuLnByb2dyZXNzLXRyYWNrZXItLXNxdWFyZSB7XHJcblxyXG4gIC5wcm9ncmVzcy1zdGVwIHtcclxuICAgIHBhZGRpbmctdG9wOiAwO1xyXG4gIH1cclxuXHJcbiAgICAucHJvZ3Jlc3MtbWFya2VyIHtcclxuICAgICAgdHJhbnNmb3JtOiBzY2FsZVgoMC4zMykgdHJhbnNsYXRlWSgtICRwYXRoLXBvc2l0aW9uKTtcclxuICAgICAgYm9yZGVyLXJhZGl1czogMDtcclxuICAgIH1cclxuXHJcbn1cclxuXHJcblxyXG4vLyBPdmVyZmxvdyBvbiBzbWFsbCBzY3JlZW5zXHJcbkBtZWRpYSAobWF4LXdpZHRoOiAzOTlweCkge1xyXG4gIC5wcm9ncmVzcy10cmFja2VyLW1vYmlsZSB7XHJcbiAgICBvdmVyZmxvdy14OiBhdXRvO1xyXG5cclxuICAgIC5wcm9ncmVzcy10cmFja2VyIHtcclxuICAgICAgbWluLXdpZHRoOiAyMDAlO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuXHJcbi8vIFZlcnRpY2FsIGxheW91dFxyXG4ucHJvZ3Jlc3MtdHJhY2tlci0tdmVydGljYWwge1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcblxyXG4gIC5wcm9ncmVzcy1zdGVwIHtcclxuICAgIGZsZXg6IDEgMSBhdXRvO1xyXG5cclxuICAgICY6OmFmdGVyIHtcclxuICAgICAgcmlnaHQ6IGF1dG87XHJcbiAgICAgIHRvcDogJG1hcmtlci1zaXplLWhhbGY7XHJcbiAgICAgIGxlZnQ6ICRwYXRoLXBvc2l0aW9uO1xyXG4gICAgICB3aWR0aDogJHBhdGgtaGVpZ2h0O1xyXG4gICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAgIC5wcm9ncmVzcy1tYXJrZXIge1xyXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIGxlZnQ6IDA7XHJcbiAgICB9XHJcblxyXG4gICAgLnByb2dyZXNzLXRleHQge1xyXG4gICAgICBwYWRkaW5nLXRvcDogJG1hcmtlci1zaXplLXF1YXJ0ZXI7XHJcbiAgICAgIHBhZGRpbmctbGVmdDogJHRleHQtcGFkZGluZy0tdmVydGljYWw7XHJcbiAgICB9XHJcblxyXG4gICAgLnByb2dyZXNzLXN0ZXA6bm90KDpsYXN0LWNoaWxkKSAucHJvZ3Jlc3MtdGV4dCB7XHJcbiAgICAgIHBhZGRpbmctYm90dG9tOiAkdGV4dC1wYWRkaW5nLS12ZXJ0aWNhbDtcclxuICAgIH1cclxufVxyXG4iLCIvLyAtLS0tLSBWYXJpYWJsZXMgLS0tLS1cclxuXHJcbi8vIENvbG91cnNcclxuJHByb2dyZXNzLWNvbG9yLWRhcms6ICAgICAgICRwcmltYXJ5LWNvbG9yOyAvLyAjMTk3NkQyICFkZWZhdWx0O1xyXG4kcHJvZ3Jlc3MtY29sb3I6ICAgICAgICAgICAgJGFjY2VudC1jb2xvcjsgLy8gIzIxOTZGMyAhZGVmYXVsdDtcclxuJHByb2dyZXNzLWNvbG9yLWxpZ2h0OiAgICAgICM1NkFERjUgIWRlZmF1bHQ7XHJcbiRwcm9ncmVzcy1jb2xvci1ncmV5LWxpZ2h0OiAjYjZiNmI2ICFkZWZhdWx0O1xyXG4kcHJvZ3Jlc3MtY29sb3ItZ3JleTogICAgICAgIzg2ODY4NiAhZGVmYXVsdDtcclxuJHByb2dyZXNzLWNvbG9yLWdyZXktZGFyazogICMzMzMzMzMgIWRlZmF1bHQ7XHJcblxyXG4vLyBTaXppbmdcclxuJHByb2dyZXNzLXRyYWNrZXItcGFkZGluZzogIDVweCAhZGVmYXVsdDtcclxuXHJcbiRtYXJrZXItc2l6ZTogICAgICAgICAgICAgICA0OHB4ICFkZWZhdWx0O1xyXG4kbWFya2VyLXNpemUtaGFsZjogICAgICAgICAgKCRtYXJrZXItc2l6ZSAvIDIpO1xyXG4kbWFya2VyLXNpemUtdGhpcmQ6ICAgICAgICAgKCRtYXJrZXItc2l6ZSAvIDMpO1xyXG4kbWFya2VyLXNpemUtcXVhcnRlcjogICAgICAgKCRtYXJrZXItc2l6ZSAvIDQpO1xyXG4kbWFya2VyLXNwYWNpbmc6ICAgICAgICAgICAgMTBweCAhZGVmYXVsdDtcclxuXHJcbiRwYXRoLWhlaWdodDogICAgICAgICAgICAgICA0cHggIWRlZmF1bHQ7XHJcbiRwYXRoLXBvc2l0aW9uOiAgICAgICAgICAgICAkbWFya2VyLXNpemUtaGFsZiAtICgkcGF0aC1oZWlnaHQgLyAyKTtcclxuXHJcbiR0ZXh0LXBhZGRpbmc6ICAgICAgICAgICAgICAkbWFya2VyLXNpemUtaGFsZiAhZGVmYXVsdDtcclxuJHRleHQtcGFkZGluZy1YOiAgICAgICAgICAgICRtYXJrZXItc2l6ZS10aGlyZCAhZGVmYXVsdDtcclxuJHRleHQtcGFkZGluZy1ZOiAgICAgICAgICAgICRtYXJrZXItc2l6ZS1oYWxmICFkZWZhdWx0O1xyXG4kdGV4dC1wYWRkaW5nLS12ZXJ0aWNhbDogICAgJG1hcmtlci1zaXplICsgJG1hcmtlci1zaXplLWhhbGYgIWRlZmF1bHQ7XHJcblxyXG4vLyBPbmx5IG5lZWRlZCBmb3Igc2hvcnQgdGV4dCB2ZXJzaW9uLCB0aGUgd29yZCBzaXplIHNob3VsZCBiZSB0aGUgd2lkdGggb2YgdGhlIHdpZGVzdCB3b3JkIHdpdGhvdXQgcGFkZGluZy5cclxuJHdvcmQtc2l6ZTogICAgICAgICAgICAgICAgICAgICA1NHB4ICFkZWZhdWx0O1xyXG4kcHJvZ3Jlc3MtdHJhY2tlci13b3JkLXBhZGRpbmc6ICgkd29yZC1zaXplICsgJHRleHQtcGFkZGluZy1YICsgJG1hcmtlci1zaXplLWhhbGYpIC8gMjtcclxuXHJcbi8vIEFuaW1hdGlvbnMvVHJhbnNpdGlvbnNcclxuJGFuaW1hdGlvbi1kdXJhdGlvbjogICAgICAgIDAuM3MgIWRlZmF1bHQ7XHJcbiRyaXBwbGUtY29sb3I6ICAgICAgICAgICAgICByZ2JhKDAsIDAsIDAsIDAuMykgIWRlZmF1bHQ7XHJcbiIsIi8vIC0tLS0tIFByb2dyZXNzIFRyYWNrZXIgQW5pbWF0aW9ucyAtLS0tLVxyXG4vLyBBbmltYXRpb24gc2hvdyBhZnRlciBjbGljayB1c2luZyBwdXJlIENTUyBiYXNlZCBvbiBhIHRlY2huaXF1ZSAtIGh0dHBzOi8vZ2hpbmRhLm5ldC9hcnRpY2xlL2Nzcy1yaXBwbGUtbWF0ZXJpYWwtZGVzaWduLyBhbmQgdGhlIE1hdGVyaWFsIGRlc2lnbiByaXBwbGUgLSBodHRwczovL2dldG1kbC5pby9jb21wb25lbnRzLyNidXR0b25zLXNlY3Rpb25cclxuXHJcbi8vIFJpcHBsZSBlbGVtZW50cyBtaXhpblxyXG5AbWl4aW4gcmlwcGxlLWVsZW1lbnQoKSB7XHJcbiAgY29udGVudDogXCJcIjtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogNTAlO1xyXG4gIGxlZnQ6IDUwJTtcclxuICB6LWluZGV4OiAzMDtcclxuICBiYWNrZ3JvdW5kOiAkcmlwcGxlLWNvbG9yO1xyXG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKSBzY2FsZSgwKTsgLy8gSW5pdGlhbCBzdGF0ZSwgc2hvdWxkIGhpZGUgdGhlIGVmZmVjdCB3aGVuIG5vdCBhbmltYXRpbmdcclxuICB2aXNpYmlsaXR5OiBoaWRkZW47IC8vIEhpZGVzIGVsZW1lbnQgc28gaXQgZG9lc250IGFuaW1hdGUgb24gcGFnZSBsb2FkXHJcbn1cclxuXHJcbkBtaXhpbiByaXBwbGUtZWxlbWVudC1hY3RpdmUoKSB7XHJcbiAgdmlzaWJpbGl0eTogdmlzaWJsZTsgLy8gU2hvd3MgZWxlbWVudCB3aGVuIGl0IGlzIGZvY3VzZWRcclxufVxyXG5cclxuLy8gQW5pbWF0aW9uIEtleWZyYW1lc1xyXG5Aa2V5ZnJhbWVzIHNjYWxlLXVwIHtcclxuICBmcm9tIHtcclxuICAgIG9wYWNpdHk6IDE7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKSBzY2FsZSgwKTtcclxuICB9XHJcblxyXG4gIHRvIHtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKSBzY2FsZSgxKTtcclxuICB9XHJcbn1cclxuXHJcblxyXG5cclxuLy8gLS0tLS0gUmlwcGxlIGVmZmVjdCB3aGVuIG1hcmtlciBpcyBjbGlja2VkIC0tLS0tXHJcbi5hbmltLXJpcHBsZSwgLmFuaW0tcmlwcGxlLWxhcmdlLCAuYW5pbS1yaXBwbGUtc3BsYXNoIHtcclxuXHJcbiAgLnByb2dyZXNzLW1hcmtlcjo6YmVmb3JlIHtcclxuICAgIEBpbmNsdWRlIHJpcHBsZS1lbGVtZW50KCk7XHJcbiAgfVxyXG5cclxuICA6bm90KDphY3RpdmUpIC5wcm9ncmVzcy1tYXJrZXI6OmJlZm9yZSB7XHJcbiAgICBhbmltYXRpb246IHNjYWxlLXVwICRhbmltYXRpb24tZHVyYXRpb24gZWFzZS1vdXQ7XHJcbiAgfVxyXG5cclxuICA6Zm9jdXMgLnByb2dyZXNzLW1hcmtlcjo6YmVmb3JlIHtcclxuICAgIEBpbmNsdWRlIHJpcHBsZS1lbGVtZW50LWFjdGl2ZSgpO1xyXG4gIH1cclxuXHJcbn1cclxuXHJcbi8vIC0tLS0tIExhcmdlIHJpcHBsZSB3aGljaCBleHBhbmRzIG91dHNpZGUgb2YgdGhlIGJvdW5kcyBvZiBtYXJrZXIgLS0tLS1cclxuLmFuaW0tcmlwcGxlLWxhcmdlIHtcclxuXHJcbiAgLnByb2dyZXNzLW1hcmtlcjo6YmVmb3JlIHtcclxuICAgIHdpZHRoOiAyMDAlO1xyXG4gICAgaGVpZ2h0OiAyMDAlO1xyXG4gIH1cclxuXHJcbn1cclxuXHJcbi8vIC0tLS0tIExhcmdlIHJpcHBsZSB3aXRoIHNwbGFzaCAtLS0tLVxyXG4uYW5pbS1yaXBwbGUtc3BsYXNoIHtcclxuXHJcbiAgLnByb2dyZXNzLW1hcmtlcjo6YmVmb3JlIHtcclxuICAgIHdpZHRoOiAyMDAlO1xyXG4gICAgaGVpZ2h0OiAyMDAlO1xyXG4gICAgYm94LXNoYWRvdzogMCAwIDZweCA2cHggcmdiYSgwLCAwLCAwLCAwLjM1KTtcclxuICB9XHJcblxyXG59XHJcblxyXG4vLyAtLS0tLSBEb3VibGUgcmlwcGxlIGVmZmVjdCwgc2ltaWxhciB0byBhbiBhY3R1YWwgd2F0ZXIgcmlwcGxlIC0tLS0tXHJcbi5hbmltLXJpcHBsZS1kb3VibGUge1xyXG5cclxuICAucHJvZ3Jlc3MtbWFya2VyIHtcclxuICAgICY6OmJlZm9yZSwgJjo6YWZ0ZXIge1xyXG4gICAgICBAaW5jbHVkZSByaXBwbGUtZWxlbWVudCgpO1xyXG4gICAgICBiYWNrZ3JvdW5kOiBub25lO1xyXG4gICAgICBib3JkZXI6IDNweCBzb2xpZCAkcmlwcGxlLWNvbG9yO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgOm5vdCg6YWN0aXZlKSAucHJvZ3Jlc3MtbWFya2VyIHtcclxuICAgICY6OmJlZm9yZSwgJjo6YWZ0ZXIge1xyXG4gICAgICBhbmltYXRpb246IHNjYWxlLXVwICRhbmltYXRpb24tZHVyYXRpb24gZWFzZS1vdXQgMHM7XHJcbiAgICB9XHJcbiAgICAmOjphZnRlciB7XHJcbiAgICAgIGFuaW1hdGlvbi1kZWxheTogJGFuaW1hdGlvbi1kdXJhdGlvbi8yO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgOmZvY3VzIC5wcm9ncmVzcy1tYXJrZXIge1xyXG4gICAgJjo6YmVmb3JlLCAmOjphZnRlciB7XHJcbiAgICAgIEBpbmNsdWRlIHJpcHBsZS1lbGVtZW50LWFjdGl2ZSgpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbn1cclxuXHJcbi8vIC0tLS0tIEZpbGwgdXAgdGhlIHBhdGggYmV0d2VlbiBtYXJrZXJzIHdoZW4gaXQgYmVjb21lcyBhY3RpdmUgLS0tLS1cclxuLmFuaW0tcGF0aCB7XHJcblxyXG4gIC5wcm9ncmVzcy1zdGVwIHtcclxuXHJcbiAgICAmOjphZnRlciB7XHJcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgJHByb2dyZXNzLWNvbG9yLWdyZXktbGlnaHQgNTAlLCAkcHJvZ3Jlc3MtY29sb3ItZ3JleSA1MCUpO1xyXG4gICAgICBiYWNrZ3JvdW5kLXNpemU6IDIwMCUgMTAwJTtcclxuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMCUgMTAwJTtcclxuICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1wb3NpdGlvbiAkYW5pbWF0aW9uLWR1cmF0aW9uIGVhc2Utb3V0O1xyXG4gICAgfVxyXG5cclxuICAgICYuaXMtY29tcGxldGU6OmFmdGVyIHtcclxuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTEwMCUgMTAwJTtcclxuICAgIH1cclxuXHJcbiAgfVxyXG5cclxufVxyXG4iLCIjY2FuY2VsLWNsYWltIHtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIHRvcDogMDsgXHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNSk7XHJcbiAgICB6LWluZGV4OiA5OTk5O1xyXG4gIH1cclxuXHJcbiNjYW5jZWwtY2xhaW0tY29udGFpbmVyIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogNTAlO1xyXG4gICAgbGVmdDogNTAlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHNlY29uZGFyeS1jb2xvcjtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xyXG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xyXG4gICAgd2lkdGg6IDQwJTtcclxuICAgIHBhZGRpbmc6IDE1cHg7XHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICB0b3A6IDA7XHJcbiAgICAgIGxlZnQ6IDA7XHJcbiAgICAgIHRyYW5zZm9ybTogbm9uZTtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgIGhlaWdodDogMTAwJTtcclxuICAgIH1cclxuICB9XHJcbiAgXHJcbiAgLmNhbmNlbC1jbGFpbS1jb250YWluZXIge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiA1MCU7XHJcbiAgICBsZWZ0OiA1MCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Vjb25kYXJ5LWNvbG9yO1xyXG4gIH1cclxuXHJcbiAgLmNhbmNlbC1jbGFpbS1idXR0b24ge1xyXG4gICAgYnV0dG9uIHtcclxuICAgICAgYm9yZGVyLXJhZGl1czogMDtcclxuICAgICAgbWFyZ2luOiA1cHggNXB4O1xyXG4gICAgICBmb250LXNpemU6IDExcHg7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvLyAuY2xvc2UtbWFyayB7XHJcbiAgLy8gICBtYXJnaW4tbGVmdDogMTBweDtcclxuICAvLyB9XHJcblxyXG4gICNjYW5jZWwtbm8tcHJlZiB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB0b3A6IDA7IFxyXG4gICAgbGVmdDogMDtcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpO1xyXG4gICAgei1pbmRleDogOTk5OTtcclxuICB9XHJcblxyXG4jY2FuY2VsLW5vLXByZWYtY29udGFpbmVyIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogNTAlO1xyXG4gICAgbGVmdDogNTAlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHNlY29uZGFyeS1jb2xvcjtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xyXG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xyXG4gICAgd2lkdGg6IDQwJTtcclxuICAgIHBhZGRpbmc6IDE1cHg7XHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICB0b3A6IDA7XHJcbiAgICAgIGxlZnQ6IDA7XHJcbiAgICAgIHRyYW5zZm9ybTogbm9uZTtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgIGhlaWdodDogMTAwJTtcclxuICAgIH1cclxuICB9XHJcbiAgXHJcbiAgLmNhbmNlbC1uby1wcmVmLWNvbnRhaW5lciB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDUwJTtcclxuICAgIGxlZnQ6IDUwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWNvbmRhcnktY29sb3I7XHJcbiAgfVxyXG5cclxuICAuY2FuY2VsLW5vLXByZWYtYnV0dG9uIHtcclxuICAgIGJ1dHRvbiB7XHJcbiAgICAgIGJvcmRlci1yYWRpdXM6IDA7XHJcbiAgICAgIG1hcmdpbjogNXB4IDVweDtcclxuICAgICAgZm9udC1zaXplOiA4cHg7XHJcbiAgICB9XHJcbiAgfSIsIiN3YXJuaW5nLW1lc3NhZ2Utc3VibWl0LWNsYWltIHtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIHRvcDogMDsgXHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNSk7XHJcbiAgICB6LWluZGV4OiA5OTk5O1xyXG4gIH1cclxuXHJcbiN3YXJuaW5nLW1lc3NhZ2Utc3VibWl0LWNsYWltLWNvbnRhaW5lciB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDUwJTtcclxuICAgIGxlZnQ6IDUwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWNvbmRhcnktY29sb3I7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcclxuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcclxuICAgIHdpZHRoOiA0MCU7XHJcbiAgICBwYWRkaW5nOiAxNXB4O1xyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgdG9wOiAwO1xyXG4gICAgICBsZWZ0OiAwO1xyXG4gICAgICB0cmFuc2Zvcm06IG5vbmU7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB9XHJcbiAgfVxyXG4gIFxyXG4vLyAgIC5jYW5jZWwtY2xhaW0tY29udGFpbmVyIHtcclxuLy8gICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuLy8gICAgIHRvcDogNTAlO1xyXG4vLyAgICAgbGVmdDogNTAlO1xyXG4vLyAgICAgYmFja2dyb3VuZC1jb2xvcjogJHNlY29uZGFyeS1jb2xvcjtcclxuLy8gICB9XHJcblxyXG4gIC53YXJuaW5nLW1lc3NhZ2Utc3VibWl0LWNsYWltLWJ1dHRvbiB7XHJcbiAgICBidXR0b24ge1xyXG4gICAgICBib3JkZXItcmFkaXVzOiAwO1xyXG4gICAgICBtYXJnaW46IDVweCA1cHg7XHJcbiAgICAgIGZvbnQtc2l6ZTogMTFweDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vIC5jbG9zZS1tYXJrIHtcclxuICAvLyAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xyXG4gIC8vIH0iLCIuc3VibWl0LWNsYWltLW1vZGFsIHtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIHRvcDogMDsgXHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNSk7XHJcbiAgICB6LWluZGV4OiA5OTk5O1xyXG4gIH1cclxuXHJcbi5zdWJtaXQtY2xhaW0tbW9kYWwtY29udGFpbmVyIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogNDAlO1xyXG4gICAgbGVmdDogNTAlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHNlY29uZGFyeS1jb2xvcjtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xyXG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xyXG4gICAgd2lkdGg6IDQwJTtcclxuICAgIHBhZGRpbmc6IDE1cHg7XHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICB0b3A6IDA7XHJcbiAgICAgIGxlZnQ6IDA7XHJcbiAgICAgIHRyYW5zZm9ybTogbm9uZTtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgIGhlaWdodDogMTAwJTtcclxuICAgIH1cclxuICB9XHJcbiAgXHJcbi8vICAgLmNhbmNlbC1jbGFpbS1jb250YWluZXIge1xyXG4vLyAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4vLyAgICAgdG9wOiA1MCU7XHJcbi8vICAgICBsZWZ0OiA1MCU7XHJcbi8vICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Vjb25kYXJ5LWNvbG9yO1xyXG4vLyAgIH1cclxuXHJcbiAgLnN1Ym1pdC1jbGFpbS1tb2RhbC1idXR0b24ge1xyXG4gICAgYnV0dG9uIHtcclxuICAgICAgYm9yZGVyLXJhZGl1czogMDtcclxuICAgICAgbWFyZ2luOiA1cHggNXB4O1xyXG4gICAgICBmb250LXNpemU6IDExcHg7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvLyAuY2xvc2UtbWFyayB7XHJcbiAgLy8gICBtYXJnaW4tbGVmdDogMTBweDtcclxuICAvLyB9XHJcblxyXG5cclxuLy8gTG9hZGVyXHJcblxyXG4uc3VibWl0LWNsYWltLWxvYWRlciB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB0b3A6IDA7IFxyXG4gICAgbGVmdDogMDtcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG4gICAgei1pbmRleDogOTk5OTtcclxuICB9XHJcblxyXG4uc3VibWl0LWNsYWltLWxvYWRlci1jb250YWluZXIge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAyOCU7XHJcbiAgICBsZWZ0OiA1MCU7XHJcbiAgICAvLyBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Vjb25kYXJ5LWNvbG9yO1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XHJcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XHJcbiAgICB3aWR0aDogMzUwcHg7XHJcbiAgICBwYWRkaW5nOiAxNXB4O1xyXG4gICAgLy8gQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAvLyAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIC8vICAgdG9wOiAxMCU7XHJcbiAgICAvLyAgIGxlZnQ6IDI1JTtcclxuICAgIC8vICAgdHJhbnNmb3JtOiBub25lO1xyXG4gICAgLy8gLy8gICB3aWR0aDogNzUlO1xyXG4gICAgLy8gLy8gICBoZWlnaHQ6IDc1JTtcclxuICAgIC8vIH1cclxuICB9XHJcblxyXG4gIC5zdWJtaXQtY2xhaW0tbG9hZGVyLWFuaW1hdGlvbiB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBib3JkZXI6IDE2cHggc29saWQgI2YzZjNmMztcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIGJvcmRlci10b3A6IDEzcHggc29saWQgJHByaW1hcnktY29sb3I7XHJcbiAgICBib3JkZXItYm90dG9tOiAxM3B4IHNvbGlkIHRyYW5zcGFyZW50O1xyXG4gICAgYm9yZGVyLWxlZnQ6IDEzcHggc29saWQgJHByaW1hcnktY29sb3I7XHJcbiAgICBib3JkZXItcmlnaHQ6IDEzcHggc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgICB3aWR0aDogMTIwcHg7XHJcbiAgICBoZWlnaHQ6IDEyMHB4O1xyXG4gICAgLXdlYmtpdC1hbmltYXRpb246IHNwaW4gLjVzIGxpbmVhciBpbmZpbml0ZTtcclxuICAgIGFuaW1hdGlvbjogc3BpbiAuNXMgbGluZWFyIGluZmluaXRlO1xyXG4gIH1cclxuICBcclxuICBALXdlYmtpdC1rZXlmcmFtZXMgc3BpbiB7XHJcbiAgICAwJSB7IC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7IH1cclxuICAgIDEwMCUgeyAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7IH1cclxuICB9XHJcbiAgXHJcbiAgQGtleWZyYW1lcyBzcGluIHtcclxuICAgIDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7IH1cclxuICAgIDEwMCUgeyB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyB9XHJcbiAgfVxyXG4gIFxyXG4vLyAgIC5jYW5jZWwtY2xhaW0tY29udGFpbmVyIHtcclxuLy8gICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuLy8gICAgIHRvcDogNTAlO1xyXG4vLyAgICAgbGVmdDogNTAlO1xyXG4vLyAgICAgYmFja2dyb3VuZC1jb2xvcjogJHNlY29uZGFyeS1jb2xvcjtcclxuLy8gICB9XHJcblxyXG4vLyAgIC5zdWJtaXQtY2xhaW0tbG9hZGVyLWJ1dHRvbiB7XHJcbi8vICAgICBidXR0b24ge1xyXG4vLyAgICAgICBib3JkZXItcmFkaXVzOiAwO1xyXG4vLyAgICAgICBtYXJnaW46IDVweCA1cHg7XHJcbi8vICAgICAgIGZvbnQtc2l6ZTogMTFweDtcclxuLy8gICAgIH1cclxuLy8gICB9XHJcblxyXG4gIC8vIC5jbG9zZS1tYXJrIHtcclxuICAvLyAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xyXG4gIC8vIH0iLCJcclxuLmRhc2hib2FyZCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmFmYWZhO1xyXG4gICAgYm9yZGVyLWJvdHRvbTogNnB4IHNvbGlkICNlOWU5ZTk7XHJcbn1cclxuXHJcbi5hZGRpdGlvbmFsLWluZm8ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZhZmFmYTtcclxufVxyXG5cclxuLm1lZGljYWwtaW5mbyB7XHJcbiAgICBpIHtcclxuICAgICAgICBjb2xvcjogIzAwM0RBMTtcclxuICAgIH1cclxufVxyXG5cclxuLnF1aWNrbGlua3Mge1xyXG4gICAgcGFkZGluZy10b3A6IDBweDtcclxufVxyXG5cclxuLmhvbWUtcXVpY2tsaW5rcyAucXVpY2tsaW5rOm5vdCg6Zmlyc3QtY2hpbGQpIHtcclxuICAgIGJvcmRlci1sZWZ0OiAycHggc29saWQgI2YyZjJmMjtcclxufVxyXG5cclxuLnRpdGxlLWxpbmsge1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG59XHJcblxyXG4uaWNvbi1jb250YWluZXIge1xyXG4gICAgc3ZnIHtcclxuICAgICAgICBwYWRkaW5nLWJvdHRvbTogMjBweDtcclxuICAgIH1cclxufVxyXG5cclxuLmNhcmQtYm9keSB7XHJcbiAgICBib3JkZXI6IDEwcHggc29saWQgI2YyZjJmMjtcclxuICAgIGhlaWdodDogMzIwcHg7XHJcbn1cclxuXHJcbi5wcm9tbyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmFmYWZhO1xyXG59IiwiLnVzZXItaWNvbiB7XHJcbiAgICBjb2xvcjogIzAwM0RBMTtcclxuICAgIHBhZGRpbmctbGVmdDogMzBweDtcclxufVxyXG5cclxuLmZhY2lsaXR5LWljb24ge1xyXG4gICAgY29sb3I6ICMwMDNEQTE7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDMwcHg7XHJcbn1cclxuXHJcbi5wcm92aWRlci1uYW1lIHtcclxuICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbn1cclxuXHJcbi51c2VyLWJ1dHRvbiB7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gICAgcGFkZGluZy1yaWdodDogMzBweDtcclxuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xyXG4gICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA4MDBweCkge1xyXG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICB9XHJcbn1cclxuXHJcbiNvdmVydmlld0xpbmUge1xyXG4gICAgd2lkdGg6IDk4JTtcclxufVxyXG5cclxuI292ZXJ2aWV3SGVhZGVyIHtcclxuICAgIGZvbnQtc2l6ZTogMThweDtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDMwcHg7XHJcbiAgICBtYXJnaW4tdG9wOiAzNXB4O1xyXG59XHJcblxyXG4ub3ZlcnZpZXcge1xyXG4gICAgcGFkZGluZy1sZWZ0OiAzMHB4O1xyXG5cclxuICAgIGEge1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuMjU7XHJcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XHJcbiAgICB9XHJcblxyXG4gICAgcCB7XHJcbiAgICAgICAgZm9udC1zaXplOiAxNXB4O1xyXG4gICAgfVxyXG5cclxuICAgIHVsIHtcclxuICAgICAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICB9XHJcblxyXG4gICAgI292ZXJ2aWV3VHh0IHtcclxuICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgICAgICBwYWRkaW5nLXRvcDogMTVweDtcclxuICAgIH1cclxuXHJcbn1cclxuXHJcbi5zcGVjaWFsdGllcyB7XHJcbiAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG59XHJcblxyXG4uYWRkcmVzcyB7XHJcbiAgICBhIHtcclxuICAgICAgICBwYWRkaW5nLXRvcDogMnB4O1xyXG4gICAgfVxyXG4gICAgI2Rpc3RhbmNlIHtcclxuICAgICAgICBwYWRkaW5nLXRvcDogMTVweDtcclxuICAgIH1cclxufVxyXG5cclxuLmZhY2lsaXR5IHtcclxuICAgICNmYWNpbGl0eSB7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICAgICAgcGFkZGluZy10b3A6IDE1cHg7XHJcbiAgICB9XHJcbn1cclxuXHJcbi53ZWJzaXRlIHtcclxuICAgICN3ZWJzaXRlIHtcclxuICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgICAgICBwYWRkaW5nLXRvcDogMzBweDtcclxuICAgIH1cclxufVxyXG5cclxuLnN0YXRlLWluZm8ge1xyXG4gICAgdWwgbGkge1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgICB9XHJcbn0iLCIuc2VhcmNoLW5lYXJieS1jb250YWluZXIge1xyXG4gICAgbWFyZ2luLXRvcDogMTVweDtcclxuICAgIGRpdiB7XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgIG1hcmdpbjogMCA1MHB4O1xyXG4gICAgICAgIGJ1dHRvbiB7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDMwcHggNDVweDtcclxuICAgICAgICAgICAgZm9udC1zaXplOiA0MHB4O1xyXG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAwO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkcHJpbWFyeS1jb2xvcjtcclxuICAgICAgICAgICAgY29sb3I6ICRzZWNvbmRhcnktY29sb3I7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiIsIi5uby1yZXN1bHQtbWVzc2FnZS1jb250YWluZXIge1xyXG4gICAgbWF4LXdpZHRoOiA0MzBweDtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxufVxyXG5cclxuLm5vLXJlc3VsdC1tZXNzYWdlIHtcclxuICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDtcclxufVxyXG5cclxuLm5vLXJlc3VsdC1idG4ge1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHByaW1hcnktY29sb3I7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICBwYWRkaW5nOiAxNXB4IDMwcHg7XHJcbiAgICBtYXJnaW46IDEwcHg7XHJcbn1cclxuXHJcbi5ob3ctY2FuLXdlLWhlbHAtY29udGFpbmVyIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuXHJcbi5uby1yZXN1bHQtaGVscC1jb250YWluZXIge1xyXG4gICAgd2lkdGg6IDYwJTtcclxuICAgIC8vIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlZWU7XHJcbiAgICAvLyB0ZXh0LWFsaWduOiBqdXN0aWZ5O1xyXG4gICAgLy8gcGFkZGluZzogMjBweCA0MHB4O1xyXG4gICAgLy8gQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjlweCkge1xyXG4gICAgLy8gICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgLy8gfVxyXG4gICAgcGFkZGluZzogJHNwYWNpbmcqMjtcclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG5cclxuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgIH1cclxuXHJcbiAgICAuaWNvbi1jb250YWluZXIge1xyXG4gICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLmhlbHAtY29udGFjdC11cy1tYWlsIHtcclxuICAgICAgICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XHJcbiAgICB9XHJcblxyXG4gICAgLmhlbHAtY29udGFjdC11cy1pbmZvLCAuaGVscC1jb250YWN0LXVzLW1haWwge1xyXG4gICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4vLyAuaGVscC1jb250YWN0LXVzLWljb24ge1xyXG4vLyAgICAgc3BhbiB7XHJcbi8vICAgICAgICAgZm9udC1zaXplOiA2MHB4O1xyXG4vLyAgICAgICAgIGxpbmUtaGVpZ2h0OiAwO1xyXG4vLyAgICAgfVxyXG4vLyB9XHJcblxyXG4vLyAuaGVscC1jb250YWN0LXVzLWluZm8ge1xyXG4vLyAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjlweCkge1xyXG4vLyAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuLy8gICAgIH1cclxuLy8gICAgIHAge1xyXG4vLyAgICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbi8vICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4vLyAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbi8vICAgICAgICAgbWFyZ2luLXJpZ2h0OiA1cHg7XHJcbi8vICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjlweCkge1xyXG4vLyAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbi8vICAgICAgICAgfVxyXG4vLyAgICAgICAgIGEge1xyXG4vLyAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbi8vICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxLjg7XHJcbi8vICAgICAgICAgfVxyXG4vLyAgICAgfVxyXG4vLyB9XHJcblxyXG4vLyAuaGVscC1jb250YWN0LXVzLW1haWwge1xyXG4vLyAgICAgbGluZS1oZWlnaHQ6IDMuNztcclxuLy8gICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTI1MXB4KSB7XHJcbi8vICAgICAgICAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcclxuLy8gICAgICAgICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XHJcbi8vICAgICB9XHJcbi8vICAgICBwIHtcclxuLy8gICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OXB4KSB7XHJcbi8vICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuLy8gICAgICAgICB9XHJcbi8vICAgICB9XHJcbi8vIH0iLCIucHJvdmlkZXItcmVzdWx0cy1jYXJkcy1jb250YWluZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2VlZTtcclxuICAgIG1heC13aWR0aDogODAwcHg7XHJcbiAgICBtYXJnaW46IDE1cHggMCAxNXB4O1xyXG4gICAgcGFkZGluZzogJHNwYWNpbmcqMiAkc3BhY2luZyoxLjU7XHJcblxyXG4gICAgLnByb3ZpZGVyLWNhcmQtaWNvbiB7XHJcbiAgICAgICAgLmljb24tY29udGFpbmVyLXJvdW5kZWQge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDAuNzVlbTtcclxuICAgICAgICB9XHJcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTc3cHgpIHtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogJHNwYWNpbmc7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzdweCkge1xyXG4gICAgICAgIHBhZGRpbmc6ICRzcGFjaW5nKjEuNTtcclxuICAgIH1cclxufVxyXG5cclxuLnByb3ZpZGVyLWNhcmQtbmFtZSB7XHJcbiAgICBoNCB7XHJcbiAgICAgICAgYSB7XHJcbiAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG4gICAgICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG4gICAgICAgICAgICAgICAgY29sb3I6ICRhY2NlbnQtY29sb3I7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbi5wcm92aWRlci1jYXJkLWRpc3RhbmNlIHtcclxuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xyXG4gICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjlweCkge1xyXG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICB9XHJcbiAgICBwIHtcclxuICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIH1cclxufVxyXG5cclxuLnByb3ZpZGVyLWNhcmQtc3BlY2lhbGl0eSB7XHJcbiAgICBhIHtcclxuICAgICAgICBjb2xvcjogIzAwMDtcclxuICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcclxuICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XHJcbiAgICAgICAgICAgIGNvbG9yOiAkYWNjZW50LWNvbG9yO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuLnByb3ZpZGVyLWNhcmQtYWRkcmVzcyB7XHJcbiAgICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XHJcbiAgICBkaXYge1xyXG4gICAgICAgIHdpZHRoOiA4MCU7XHJcbiAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjlweCkge1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuLnByb3ZpZGVyLWNhcmQtb3RoZXItZGV0YWlsIHtcclxuICAgIGNvbG9yOiAjMDAzREExO1xyXG5cclxuICAgIHVsIHtcclxuICAgICAgICBsaXN0LXN0eWxlOiBub25lO1xyXG4gICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICBwYWRkaW5nOiAwOyBcclxuICAgIH1cclxuXHJcbiAgICBsaSB7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDI7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5wcm92aWRlci1jYXJkLWNvbnRhY3Qge1xyXG4gICAgYSB7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDM7XHJcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XHJcbiAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG4gICAgICAgICAgICBjb2xvcjogJGFjY2VudC1jb2xvcjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbi5wcm92aWRlci1jYXJkLWJ0biB7XHJcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcclxuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY5cHgpIHtcclxuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDE1cHg7XHJcblxyXG4gICAgfVxyXG4gICAgXHJcbiAgICBidXR0b24ge1xyXG4gICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTk2RUNGO1xyXG4gICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTE1RkEwO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICAgICAgcGFkZGluZzogMTBweCAyMHB4O1xyXG4gICAgICAgIG1hcmdpbjogMDsgLy8gd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcclxuICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU3N3B4KSB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuLmNvbnRyb2xzLXBhZ2luYXRpb24ge1xyXG4gICAgbWF4LXdpZHRoOiA4MDBweDtcclxuICAgIHBhZGRpbmc6ICRzcGFjaW5nKjE7XHJcbn1cclxuXHJcbi5kaXJlY3QtcGF5LW5vdGUge1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG4jZGlyZWN0LXBheS1ub3RlLWNvbnRhaW5lciB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDUwJTtcclxuICAgIGxlZnQ6IDUwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWNvbmRhcnktY29sb3I7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcclxuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcclxuICAgIHdpZHRoOiA1MCU7XHJcbiAgICBwYWRkaW5nOiAyNXB4O1xyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogMDtcclxuICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgIHRyYW5zZm9ybTogbm9uZTtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB9XHJcbn1cclxuXHJcbiNkaXJlY3QtcGF5LW5vdGUge1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpO1xyXG4gICAgei1pbmRleDogOTk5OTtcclxufVxyXG5cclxuLmluZm8tbWFwIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IG9yYW5nZTtcclxuICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDVweDtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDVweDtcclxuICAgIG1heC13aWR0aDogODAwcHg7XHJcblxyXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTc3cHgpIHtcclxuICAgICAgICBwYWRkaW5nOiAkc3BhY2luZyoxLjU7XHJcbiAgICB9XHJcbn1cclxuXHJcbiNteU1hcCB7XHJcbiAgICBtYXgtd2lkdGg6IDgwMHB4O1xyXG59XHJcblxyXG4jem9vbU91dCwgI3pvb21JbiB7XHJcbiAgICBmb250LXNpemU6IDI1cHg7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGhlaWdodDogMzBweDtcclxuICAgIHJpZ2h0OiAzM3B4O1xyXG4gICAgd2lkdGg6IDMwcHg7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxNnB4O1xyXG4gICAgLW1vei11c2VyLXNlbGVjdDogLW1vei1ub25lO1xyXG4gICAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTtcclxuICAgIC1tcy11c2VyLXNlbGVjdDogbm9uZTtcclxuICAgIHVzZXItc2VsZWN0OiBub25lO1xyXG4gICAgei1pbmRleDogMTtcclxufVxyXG5cclxuI3pvb21PdXQge1xyXG4gICAgbGluZS1oZWlnaHQ6IDI0cHg7XHJcbiAgICB0b3A6IDIyMHB4O1xyXG59XHJcblxyXG4jem9vbUluIHtcclxuICAgIGxpbmUtaGVpZ2h0OjMwcHg7XHJcbiAgICB0b3A6MTYwcHg7XHJcbn1cclxuXHJcbi5kYXJrWm9vbXtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzMzMzM7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZmZmO1xyXG4gICAgY29sb3I6d2hpdGU7XHJcbn1cclxuXHJcbi5kYXJrWm9vbTpob3ZlcntcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM4MDgwODA7XHJcbn1cclxuXHJcbi5saWdodFpvb217XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICMwMDA7XHJcbiAgICBjb2xvcjogYmxhY2s7XHJcbn1cclxuXHJcbi5saWdodFpvb206aG92ZXJ7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQ0NDQ0NDO1xyXG59XHJcblxyXG4jcmVkb0J0biB7XHJcbiAgICBmb250LXNpemU6IDAuNzBlbTtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBsZWZ0OiAxNXB4O1xyXG4gICAgdG9wOiAxMHB4O1xyXG4gICAgei1pbmRleDogMTtcclxuXHJcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAzNjBweCkge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMC41MGVtO1xyXG4gICAgICAgIHBhZGRpbmc6IDVweDtcclxuICAgICAgICB0b3A6IDE1cHg7XHJcbiAgICB9XHJcbn1cclxuIiwiI3Byb3ZpZGVyLW5vdGUge1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpO1xyXG4gICAgei1pbmRleDogOTk5OTtcclxufVxyXG5cclxuI3Byb3ZpZGVyLW5vdGUtY29udGFpbmVyIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogNTAlO1xyXG4gICAgbGVmdDogNTAlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHNlY29uZGFyeS1jb2xvcjtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xyXG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xyXG4gICAgd2lkdGg6IDUwJTtcclxuICAgIHBhZGRpbmc6IDI1cHg7XHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgdHJhbnNmb3JtOiBub25lO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgIH1cclxufVxyXG5cclxuLnByb3ZpZGVyLW5vdGUtYnRuIHtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuLy8gLmNsYWltLWhlYWRlci10ZXh0IHtcclxuLy8gICAgIGNvbG9yOiAjMTk2ZWNmO1xyXG4vLyAgICAgbWFyZ2luLXRvcDogMjBweDtcclxuLy8gICAgIHNwYW4ge1xyXG4vLyAgICAgICAgIGNvbG9yOiAjMTk2ZWNmO1xyXG4vLyAgICAgICAgIGZvbnQtc2l6ZTogMS43NWVtO1xyXG4vLyAgICAgICAgIG1hcmdpbi1yaWdodDogMTVweDtcclxuLy8gICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbi8vICAgICB9XHJcbi8vICAgICBoMiB7XHJcbi8vICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4vLyAgICAgfVxyXG4vLyB9XHJcbi8vIC5wcm9ncmVzcy1zdGVwcyB7XHJcbi8vICAgICBtYXJnaW4tdG9wOiAyMHB4O1xyXG4vLyAgICAgLnByb2dyZXNzLXN0ZXAtbnVtYmVyIHtcclxuLy8gICAgICAgICBkaXYge1xyXG4vLyAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbi8vICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMTVweDtcclxuLy8gICAgICAgICB9XHJcbi8vICAgICAgICAgcCB7XHJcbi8vICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4vLyAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbi8vICAgICAgICAgfVxyXG4vLyAgICAgfVxyXG4vLyB9XHJcbi8vIC5iZy1jaXJjbGUge1xyXG4vLyAgICAgYm9yZGVyOiAycHggc29saWQgIzgwODA4MDtcclxuLy8gICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XHJcbi8vICAgICBmb250LXNpemU6IDIwcHg7XHJcbi8vICAgICBsaW5lLWhlaWdodDogMzVweDtcclxuLy8gICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbi8vICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbi8vICAgICB3aWR0aDogNDBweDtcclxuLy8gfVxyXG4vLyAuYmctY2lyY2xlLXN1Ym1pdCB7XHJcbi8vICAgICBvcGFjaXR5OiAwLjU7XHJcbi8vIH1cclxuLy8gLmZvcm0tdGV4dCB7XHJcbi8vICAgICBtYXJnaW4tcmlnaHQ6IDM1cHg7XHJcbi8vICAgICBtYXJnaW4tdG9wOiAxOHB4O1xyXG4vLyB9XHJcbi8vIC5mb3JtLXRleHQtc3VibWl0IHtcclxuLy8gICAgIG1hcmdpbi10b3A6IDE4cHg7XHJcbi8vICAgICBvcGFjaXR5OiAwLjU7XHJcbi8vIH1cclxuLy8gI3Byb2dyZXNzTGluZSB7XHJcbi8vICAgICBtYXJnaW4tdG9wOiAzNXB4O1xyXG4vLyB9XHJcbi5jbGFpbS1pbmZvIHtcclxuICAgICNjbGFpbUluZm9UaXRsZSB7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMTVweDtcclxuICAgIH1cclxuICAgIC5jbGFpbS1ncmVldGluZ3Mge1xyXG4gICAgICAgIHdpZHRoOiA1MCU7XHJcbiAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5OTFweCkge1xyXG4gICAgICAgICAgICB3aWR0aDoxMDAlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuLmNsYWltLWluZm8tZmllbGRzIHtcclxuICAgIG1hcmdpbi10b3A6IDMwcHg7XHJcbn1cclxuXHJcbi5ub3RlLWRpc3BsYXkge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0QzRDNEMztcclxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgICBwYWRkaW5nLXRvcDogMTBweDtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAuZXhjbGFtYXRpb24taWNvbiB7XHJcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAyMnB4O1xyXG4gICAgfVxyXG59XHJcblxyXG4vLyAuY29sLW9uZSB7XHJcbi8vICAgICBtYXJnaW4tbGVmdDogMTVweDtcclxuLy8gICAgIG1hcmdpbi1yaWdodDogNzVweDtcclxuLy8gfVxyXG4vLyAuY29sLXR3byB7XHJcbi8vICAgICBtYXJnaW4tbGVmdDogMTVweDtcclxuLy8gICAgIG1hcmdpbi1yaWdodDogNzVweDtcclxuLy8gfVxyXG4uY2xhaW0tbm90ZSB7XHJcbiAgICBwIHtcclxuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAyNXB4O1xyXG4gICAgfVxyXG59XHJcbi8vICNiaWxsZWRBbW91bnQ6aW52YWxpZHtcclxuLy8gICAgIGJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcclxuLy8gfVxyXG5cclxuLmRhdGUtb2Ytc2VydmljZS1pY29uIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNkZGQ7XHJcbiAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICBwYWRkaW5nOiA0cHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiAwcHggNXB4IDVweCAwcHg7XHJcbn1cclxuXHJcbiNkaWFnRGV0YWlscyB7XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbn1cclxuXHJcbiNjaGFyVHJlYXRtZW50TGltaXQsXHJcbiNjaGFyRGlhZ25vc2lzTGltaXQge1xyXG4gICAgZm9udC1zaXplOiAxNHB4OyAvLyBmb250LXdlaWdodDogYm9sZDtcclxuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xyXG59XHJcblxyXG4udHJlYXRGb3JtIHtcclxuICAgIG1hcmdpbi10b3A6IDUwcHg7XHJcbn1cclxuXHJcbiN0cmVhdERldGFpbHMge1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG59XHJcblxyXG4jbGluZUJ0biB7XHJcbiAgICBtYXJnaW4tdG9wOiA1MHB4O1xyXG59XHJcblxyXG4uc3VibWl0LWNsYWltIHtcclxuICAgIHBhZGRpbmctdG9wOiAzNXB4O1xyXG59XHJcblxyXG4uY2FuY2VsLWJ0biB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMTBweDtcclxuICAgIHBhZGRpbmctbGVmdDogMjBweDtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDIwcHg7XHJcbiAgICBwYWRkaW5nLXRvcDogMTBweDtcclxufVxyXG5cclxuLnN1Ym1pdC1jbGFpbS1idG4ge1xyXG4gICAgcGFkZGluZy1ib3R0b206IDEwcHg7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDI1cHg7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiAyNXB4O1xyXG4gICAgcGFkZGluZy10b3A6IDEwcHg7XHJcbn1cclxuXHJcbi5idXR0b24tdGV4dCB7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbn1cclxuXHJcbiNzdWJtaXQtY2xhaW0tbWVtYmVyLXJlcS1tc2csXHJcbiNzdWJtaXQtY2xhaW0tcHJvdmlkZXItcmVxLW1zZyxcclxuI3N1Ym1pdC1jbGFpbS1wcm92aWRlci1jaGFyLW1zZyxcclxuI3N1Ym1pdC1jbGFpbS1wcm92aWRlcmNvdW50cnktcmVxLW1zZyxcclxuI3N1Ym1pdC1jbGFpbS1wcm92aWRlcmNvdW50cnktaW52YWxpZC1tc2csXHJcbiNzdWJtaXQtY2xhaW0tcHJvdmlkZXJjb3VudHJ5LWNoYXItbXNnLFxyXG4jc3VibWl0LWNsYWltLXByb3ZpZGVyY2l0eS1yZXEtbXNnLFxyXG4jc3VibWl0LWNsYWltLXByb3ZpZGVyY2l0eS1jaGFyLW1zZyxcclxuI3N1Ym1pdC1jbGFpbS1uaWNrbmFtZS1jaGFyLW1zZyxcclxuI3N1Ym1pdC1jbGFpbS1iaWxsZWQtYW1vdW50LXJlcS1tc2csXHJcbiNzdWJtaXQtY2xhaW0tYmlsbGVkLWFtb3VudC12YWxpZC1tc2csXHJcbiNzdWJtaXQtY2xhaW0tYmlsbGVkLWFtb3VudC1ncmVhdGVyLW1zZyxcclxuI3N1Ym1pdC1jbGFpbS1jdXJyZW5jeS1yZXEtbXNnLFxyXG4jc3VibWl0LWNsYWltLWN1cnJlbmN5LWludmFsaWQtbXNnLFxyXG4jc3VibWl0LWNsYWltLWN1cnJlbmN5LWNoYXItbXNnLFxyXG4jc3VibWl0LWNsYWltLWRhdGVzZXJ2aWNlLXJlcS1tc2csXHJcbiNzdWJtaXQtY2xhaW0tZGF0ZXNlcnZpY2UtZnV0dXJlLW1zZyxcclxuI3N1Ym1pdC1jbGFpbS1kaWFnbm9zaXMtcmVxLW1zZyxcclxuI3N1Ym1pdC1jbGFpbS1kaWFnbm9zaXMtY2hhci1tc2csXHJcbiNzdWJtaXQtY2xhaW0tdHJlYXRtZW50LXJlcS1tc2csXHJcbiNzdWJtaXQtY2xhaW0tdHJlYXRtZW50LWNoYXItbXNnIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbn0iLCJcclxuI2RhdGVDb25maXJtYXRpb24ge1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcclxuICAgIGxpbmUtaGVpZ2h0OiA1cHg7XHJcbn1cclxuXHJcbiIsIi5mYS1jaGsge1xyXG4gICAgbWFyZ2luLWxlZnQ6IDQwcHg7XHJcbiAgICBtYXJnaW4tdG9wOiA1cHg7XHJcbn1cclxuXHJcbiN1cGxvYWRGaWxlc1RleHQge1xyXG4gICAgbWFyZ2luLWxlZnQ6IDMwcHg7XHJcbiAgICBtYXJnaW4tdG9wOiAxNXB4O1xyXG59XHJcblxyXG4uaW5zdHJ1Y3Rpb25zLXRleHQge1xyXG4gICAgLy8gbWFyZ2luLWxlZnQ6IDE1cHg7XHJcbiAgICBoMyB7XHJcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDE1cHg7XHJcbiAgICAgICAgcGFkZGluZy10b3A6IDEwcHg7XHJcbiAgICB9XHJcbiAgICBoNSB7XHJcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDVweDsgLy8gcGFkZGluZy10b3A6IDVweDtcclxuICAgIH1cclxuICAgIG9sIHtcclxuICAgICAgICBtYXJnaW4tbGVmdDogMTVweDtcclxuICAgICAgICBwYWRkaW5nOiAwO1xyXG4gICAgfVxyXG4gICAgb2wgbGkge1xyXG4gICAgICAgIGxpc3Qtc3R5bGUtcG9zaXRpb246IGluc2lkZTtcclxuICAgICAgICB0ZXh0LWluZGVudDogLTFlbTtcclxuICAgIH1cclxufVxyXG5cclxuLmRyb3BBcmVhIHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkO1xyXG4gICAgaGVpZ2h0OiAzMDBweDsgLy8gbWFyZ2luLWxlZnQ6IDUwcHg7XHJcbiAgICAvLyBtYXJnaW4tdG9wOiA2NnB4O1xyXG59XHJcblxyXG4jdHh0VXBsb2FkIHtcclxuICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgbWFyZ2luLXRvcDogMTAwcHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbi8vIC5idG4tdXBsb2FkIHtcclxuLy8gfVxyXG4janMtdXBsb2FkLWZpbGVzIHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkO1xyXG59XHJcblxyXG4ucGFuZWwtaGVhZGluZyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRDNEM0QzOyAvLyBtYXJnaW4tbGVmdDogNTBweDtcclxuICAgIC8vIG1hcmdpbi10b3A6IDI1cHg7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMTBweDtcclxuICAgIHBhZGRpbmctdG9wOiAxMHB4O1xyXG4gICAgd2lkdGg6IDkwJTtcclxufVxyXG5cclxuLmZvcm0tY2hlY2staW5wdXQge1xyXG4gICAgbWFyZ2luLWxlZnQ6IDVweDtcclxufVxyXG5cclxuLmZvcm0tY2hlY2stbGFiZWwge1xyXG4gICAgbWFyZ2luLWxlZnQ6IDM1cHg7XHJcbn1cclxuXHJcbi8vIFxyXG4jZHJvcC1hcmVhIHtcclxuICAgIC8vYm9yZGVyOiAxcHggc29saWQ7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGVuKCR0ZXJ0aWFyeS1jb2xvciwgNzUlKTtcclxuICAgIGhlaWdodDogMzAwcHg7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7IC8vIGJvcmRlcjogMnB4IGRhc2hlZCAjY2NjO1xyXG4gICAgLy8gYm9yZGVyLXJhZGl1czogMjBweDtcclxuICAgIC8vIHdpZHRoOiA0ODBweDtcclxuICAgIC8vIG1hcmdpbjogNTBweCBhdXRvO1xyXG4gICAgcGFkZGluZzogMjBweDtcclxuICAgIG92ZXJmbG93LXk6IGF1dG87XHJcbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgICAgIG1pbi1oZWlnaHQ6IDQwMHB4O1xyXG4gICAgICAgIG92ZXJmbG93LXk6IHZpc2libGU7XHJcbiAgICB9XHJcbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ5M3B4KSB7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgfVxyXG4gICAgIFxyXG59XHJcblxyXG4jZmlsZXMge1xyXG4gICAgLmNhcmQtY29udGFpbmVyIHtcclxuICAgICAgICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWZsZXg7XHJcbiAgICAgICAgd2lkdGg6IDE4MHB4O1xyXG4gICAgICAgIGhlaWdodDogMjMwcHg7XHJcbiAgICAgICAgcGFkZGluZzogNXB4O1xyXG4gICAgICAgIC50aHVtYmFpbC1jbG9zZSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC5maWxlbmFtZSB7XHJcbiAgICAgICAgICAgIHdvcmQtYnJlYWs6IGJyZWFrLWFsbDtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAwLjg1ZW07XHJcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC5maWxlc2l6ZSB7XHJcbiAgICAgICAgICAgIHdvcmQtYnJlYWs6IGJyZWFrLWFsbDtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAwLjY1ZW07XHJcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC50aHVtYm5haWwtaW1nIHtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIGhlaWdodDogMTEwcHg7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7IC8vIG1hcmdpbi1yaWdodDogMTBweDtcclxuICAgICAgICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICAgICAgICAgICAgb3ZlcmZsb3cteTogaGlkZGVuO1xyXG4gICAgICAgIH1cclxuICAgICAgICAudGh1bWJuYWlsLXBkZiB7XHJcbiAgICAgICAgICAgIHdpZHRoOiA4MCU7XHJcbiAgICAgICAgICAgIGhlaWdodDogMTEwcHg7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7IC8vIG1hcmdpbi1yaWdodDogMTBweDtcclxuICAgICAgICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbi8vICAgI2dhbGxlcnkge1xyXG4vLyAgICAgbWFyZ2luLXRvcDogMTBweDtcclxuLy8gICB9XHJcbi8vICAgI2ZpbGVzIGltZyB7XHJcbi8vICAgICB3aWR0aDogMTUwcHg7XHJcbi8vICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4vLyAgICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG4vLyAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuLy8gICB9XHJcbi8vICAgLmJ1dHRvbi11cGxvYWQge1xyXG4vLyAgICAgZGlzcGxheTogbm9uZTtcclxuLy8gICAgIHBhZGRpbmc6IDEwcHg7XHJcbi8vICAgICBiYWNrZ3JvdW5kOiAjY2NjO1xyXG4vLyAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4vLyAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4vLyAgICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcclxuLy8gICB9XHJcbi8vICAgLmJ1dHRvbi11cGxvYWQ6aG92ZXIge1xyXG4vLyAgICAgYmFja2dyb3VuZDogI2RkZDtcclxuLy8gICB9XHJcbiNmaWxlRWxlbSB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG59XHJcblxyXG4vLy8vLyB1cGxvYWQgZXJyb3IgbWVzc2FnZVxyXG4jc3VibWl0LWNsYWltLWZpbGVuYW1lLWR1cGxpY2F0ZS1tc2cge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxufVxyXG5cclxuI3N1Ym1pdC1jbGFpbS1maWxlLXNpemUtbXNnIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuXHJcbiNzdWJtaXQtY2xhaW0taW52YWxpZC1maWxlLXR5cGUtbXNnIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuXHJcbiNzdWJtaXQtY2xhaW0tZmlsZW5hbWUtY2hhcmFjdGVyLW1zZyB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG59XHJcblxyXG4jc3VibWl0LWNsYWltLWF0dGVzdGF0aW9uLW1zZyB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG59XHJcblxyXG4jc3VibWl0LWNsYWltLWZpbGUtcmVxdWlyZWQtbXNnIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbn0iLCIucmV2aWV3LXN1Ym1pdC1zdWItdGl0bGUge1xyXG4gICAgY29sb3I6ICRwcmltYXJ5LWNvbG9yO1xyXG59XHJcblxyXG4ucmV2aWV3LXN1Ym1pdC1jb2wtdGl0bGUge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG59XHJcblxyXG4jZWRpdC1yZXZpZXctc3VibWl0LXRpdGxle1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxufVxyXG5cclxuLnJldmlldy1zdWJtaXQtZWRpdC1pY29uIHtcclxuICAgIGNvbG9yOiAjMDAwO1xyXG4gICAgZmxvYXQ6IHJpZ2h0O1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBzcGFuIHtcclxuICAgICAgICBtYXJnaW4tbGVmdDogMTJweDsgXHJcbiAgICAgICAgaSB7XHJcbiAgICAgICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwO1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAycHg7XHJcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDJweDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbiNkcm9wLWFyZWEtc3VibWl0LXJldmlldyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGVuKCR0ZXJ0aWFyeS1jb2xvciwgNzUlKTtcclxuICAgIGhlaWdodDogNDAwcHg7XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG4gICAgb3ZlcmZsb3cteTogYXV0bztcclxuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICAgICAgbWluLWhlaWdodDogNDAwcHg7XHJcbiAgICAgICAgb3ZlcmZsb3cteTogdmlzaWJsZTtcclxuICAgIH1cclxuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMzgzcHgpIHtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB9XHJcbn1cclxuXHJcbiNmaWxlcy1zdWJtaXQtcmV2aWV3IHtcclxuICAgIC5jYXJkLWNvbnRhaW5lciB7XHJcbiAgICAgICAgd29yZC13cmFwOiBicmVhay13b3JkO1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1mbGV4O1xyXG4gICAgICAgIHdpZHRoOiAxMjVweDtcclxuICAgICAgICBoZWlnaHQ6IDIwMHB4O1xyXG4gICAgICAgIHBhZGRpbmc6IDVweDtcclxuICAgICAgICAudGh1bWJhaWwtY2xvc2Uge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkZXI7XHJcbiAgICAgICAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xyXG4gICAgICAgIH1cclxuICAgICAgICAuZmlsZW5hbWUge1xyXG4gICAgICAgICAgICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMC44NWVtO1xyXG4gICAgICAgIH1cclxuICAgICAgICAuZmlsZXNpemUge1xyXG4gICAgICAgICAgICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMC42NWVtO1xyXG4gICAgICAgIH1cclxuICAgICAgICAudGh1bWJuYWlsLWltZyB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDkwcHg7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMTBweDtcclxuICAgICAgICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICAgICAgICAgICAgb3ZlcmZsb3cteTogaGlkZGVuO1xyXG4gICAgICAgIH1cclxuICAgICAgICAudGh1bWJuYWlsLXBkZiB7XHJcbiAgICAgICAgICAgIHdpZHRoOiA4MCU7XHJcbiAgICAgICAgICAgIGhlaWdodDogOTBweDtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDsgLy8gbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG4gICAgICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuLmFycm93LXVwLXN1Ym1pdC1jbGFpbSB7XHJcbiAgICB3aWR0aDogMDtcclxuICAgIGhlaWdodDogMDtcclxuICAgIG1hcmdpbi1sZWZ0OiAxMTBweDtcclxuICAgIG1hcmdpbi1ib3R0b206IC0xcHg7XHJcbiAgICBib3JkZXItbGVmdDogMjBweCBzb2xpZCB0cmFuc3BhcmVudDtcclxuICAgIGJvcmRlci1yaWdodDogMjBweCBzb2xpZCB0cmFuc3BhcmVudDtcclxuICAgIGJvcmRlci1ib3R0b206IDIwcHggc29saWQgbGlnaHRlbigkdGVydGlhcnktY29sb3IsIDc1JSk7XHJcbn1cclxuXHJcbi5hcnJvdy11cC1jaGVjayB7XHJcbiAgICB3aWR0aDogMDtcclxuICAgIGhlaWdodDogMDtcclxuICAgIG1hcmdpbi1sZWZ0OiAyMDBweDtcclxuICAgIG1hcmdpbi1ib3R0b206IC0xcHg7XHJcbiAgICBib3JkZXItbGVmdDogMjBweCBzb2xpZCB0cmFuc3BhcmVudDtcclxuICAgIGJvcmRlci1yaWdodDogMjBweCBzb2xpZCB0cmFuc3BhcmVudDtcclxuICAgIGJvcmRlci1ib3R0b206IDIwcHggc29saWQgbGlnaHRlbigkdGVydGlhcnktY29sb3IsIDc1JSk7XHJcbn1cclxuXHJcbi5jaGVjay1tZXRob2QtdGV4dC1ib3gge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRlbigkdGVydGlhcnktY29sb3IsIDc1JSk7XHJcbiAgICBwYWRkaW5nOiA1cHggMTVweDtcclxuICAgIG1pbi1oZWlnaHQ6IDEwMHB4O1xyXG59XHJcblxyXG4uY2hlY2stbWV0aG9kLW5vLXByZWYtdGV4dC1ib3gge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRlbigkdGVydGlhcnktY29sb3IsIDc1JSk7XHJcbiAgICBwYWRkaW5nOiA1cHggMTVweDtcclxuICAgIG1pbi1oZWlnaHQ6IDE1MHB4O1xyXG59XHJcblxyXG4vLyBSYWRpbyBCdXR0b25cclxuLyogVGhlIGNvbnRhaW5lciAqL1xyXG5cclxuLnJhZGlvLWNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDM1cHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMnB4O1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTtcclxuICAgIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7XHJcbiAgICAtbXMtdXNlci1zZWxlY3Q6IG5vbmU7XHJcbiAgICB1c2VyLXNlbGVjdDogbm9uZTtcclxuICAgIGlucHV0IHtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgb3BhY2l0eTogMDtcclxuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICB9XHJcbiAgICAuY2hlY2ttYXJrIHtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgaGVpZ2h0OiAyNXB4O1xyXG4gICAgICAgIHdpZHRoOiAyNXB4O1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNlZWU7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgfVxyXG4gICAgLmNoZWNrbWFyazphZnRlciB7XHJcbiAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgIH1cclxuICAgICY6aG92ZXIgaW5wdXR+LmNoZWNrbWFyayB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2NjYztcclxuICAgIH1cclxuICAgIGlucHV0OmNoZWNrZWR+LmNoZWNrbWFyayB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzIxOTZGMztcclxuICAgIH1cclxuICAgIGlucHV0OmNoZWNrZWR+LmNoZWNrbWFyazphZnRlciB7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5yYWRpby1jb250YWluZXIgLmNoZWNrbWFyazphZnRlciB7XHJcbiAgICB0b3A6IDlweDtcclxuICAgIGxlZnQ6IDlweDtcclxuICAgIHdpZHRoOiA4cHg7XHJcbiAgICBoZWlnaHQ6IDhweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xyXG59XHJcblxyXG4ub3RwLWJ0biB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICAgIHRleHQtdHJhbnNmb3JtOiBub25lO1xyXG4gICAgLy8gYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gICAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcclxufVxyXG5cclxuLmVkaXQtcHJlZmVyZW5jZS1idG4ge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBmb250LXNpemU6IDEzcHg7XHJcbiAgICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHByaW1hcnktY29sb3I7XHJcbiAgICBib3JkZXItY29sb3I6ICRwcmltYXJ5LWNvbG9yO1xyXG59XHJcblxyXG4jZWZ0LW1ldGhvZCB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG59XHJcblxyXG4jY2hlY2stbWV0aG9kIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuXHJcbiNlZGl0LXJlaW1idXJzZW1lbnQtZm9ybSB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG59XHJcblxyXG4jZWZ0LWV0aG9kLWVkaXQsICNlZnQtbWV0aG9kLWluaXRpYWwge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxufVxyXG5cclxuI2NoZWNrLW1ldGhvZC1lZGl0LCAjY2hlY2stbWV0aG9kLWluaXRpYWwge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxufVxyXG4jc3VibWl0LXJldmlldy1wYXllZS1uYW1lLWNoZWNrLXJlcS1tc2csXHJcbiNzdWJtaXQtcmV2aWV3LWNvdW50cnktY2hlY2stcmVxLW1zZyxcclxuI3N1Ym1pdC1yZXZpZXctY3VycmVuY3ktY2hlY2stcmVxLW1zZyxcclxuI3N1Ym1pdC1yZXZpZXctcGF5ZWUtbmFtZS1lZnQtcmVxLW1zZyxcclxuI3N1Ym1pdC1yZXZpZXctY291bnRyeS1lZnQtcmVxLW1zZyxcclxuI3N1Ym1pdC1yZXZpZXctY3VycmVuY3ktZWZ0LXJlcS1tc2csXHJcbiNzdWJtaXQtcmV2aWV3LWJhY2tuYW1lLWVmdC1yZXEtbXNnIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuXHJcbiNyZWltYnVyZW1lbnQtbWV0aG9kLXJlcS1tc2d7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG59XHJcbiNpbml0aWFsLWJhbmstZGV0YWlsc3tcclxuICAgIGRpc3BsYXk6bm9uZTtcclxufVxyXG5cclxuI3NhdmUtcHJlZi1idG4ge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbiNjYW5jZWwtcHJlZi1idG4ge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5wYXllZS1pbmZvIHtcclxuICAgIGkge1xyXG4gICAgICAgIGNvbG9yOiAjMDAzREExO1xyXG4gICAgfVxyXG59XHJcblxyXG4jcGF5ZWUtbm90ZSB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNSk7XHJcbiAgICB6LWluZGV4OiA5OTk5O1xyXG59XHJcblxyXG4jcGF5ZWUtbm90ZS1jb250YWluZXIge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiA1MCU7XHJcbiAgICBsZWZ0OiA1MCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Vjb25kYXJ5LWNvbG9yO1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XHJcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XHJcbiAgICB3aWR0aDogNTAlO1xyXG4gICAgcGFkZGluZzogMjVweDtcclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgbGVmdDogMDtcclxuICAgICAgICB0cmFuc2Zvcm06IG5vbmU7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgfVxyXG59XHJcblxyXG4jc2F2ZS1wcmVmLWJ0biB7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzVweCkge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDE1cHg7XHJcbiAgICB9XHJcblxyXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMzIwcHgpIHtcclxuICAgICAgICBmb250LXNpemU6IDEwcHg7XHJcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xyXG4gICAgfVxyXG59XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG4iLCIjY2FuY2VsLXN1Ym1pdC1jbGFpbS1ub3RlIHtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIHRvcDogMDsgXHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMSk7XHJcbiAgICB6LWluZGV4OiA5OTk5O1xyXG4gIH1cclxuXHJcbiNjYW5jZWwtc3VibWl0LWNsYWltLW5vdGUtY29udGFpbmVyIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogMzAlO1xyXG4gICAgbGVmdDogNTAlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRjtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xyXG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xyXG4gICAgd2lkdGg6IDMwJTtcclxuICAgIHBhZGRpbmc6IDY3cHggMTVweDtcclxuICAgIHotaW5kZXg6IDU7XHJcbiAgICB0cmFuc2l0aW9uOiB2aXNpYmlsaXR5IDBzLCBvcGFjaXR5IDAuNXMgbGluZWFyO1xyXG4gICAgbWluLWhlaWdodDogMjAwcHg7XHJcbiAgICBib3JkZXI6IDAuMDFlbSBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMyk7XHJcbiAgICAvLyBkaXNwbGF5OiBub25lO1xyXG4gICAgLy8gZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICBcclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgIC8vIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAvLyB0b3A6IDEwJTtcclxuICAgICAgICAvLyBwYWRkaW5nLXRvcDogNTBweDtcclxuICAgICAgICB3aWR0aDogNzAlO1xyXG4gICAgICAgIC8vIGxlZnQ6IDA7XHJcbiAgICAgICAgLy8gdHJhbnNmb3JtOiBub25lO1xyXG4gICAgICAgIC8vIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIC8vIGhlaWdodDogMTAwJTtcclxuICAgIH1cclxufSIsIi5jbGFpbS1zdGF0dXMtY29udGFpbmVyIHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkO1xyXG4gICAgbWF4LXdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4uc3RhdHVzLXByb2dyZXNzIHtcclxuICAgIGxpICsgbGk6YmVmb3JlIHtcclxuICAgICAgICBjb250ZW50OiB1cmwoXCIuLi9pbWFnZXMvY2hldnJvbi1yaWdodC1zb2xpZC5zdmdcIik7XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgICAgICAgaGVpZ2h0OiAyMHB4O1xyXG4gICAgICAgIHdpZHRoOiAyMHB4O1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XHJcblxyXG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU3N3B4KSB7XHJcbiAgICAgICAgICAgIGNvbnRlbnQ6IG5vbmU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGxpOmFmdGVye1xyXG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU3N3B4KSB7XHJcbiAgICAgICAgICAgIGNvbnRlbnQ6IHVybChcIi4uL2ltYWdlcy9jaGV2cm9uLWRvd24tc29saWQuc3ZnXCIpO1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgaGVpZ2h0OiAyNHB4O1xyXG4gICAgICAgICAgICB3aWR0aDogMjRweDtcclxuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDUwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGxpOmxhc3Qtb2YtdHlwZTphZnRlcntcclxuICAgICAgICBjb250ZW50OiBub25lO1xyXG4gICAgfVxyXG5cclxuICAgIHN2ZyB7XHJcbiAgICAgICAgY29sb3I6ICMxOTZFQ0Y7XHJcbiAgICAgICAgaGVpZ2h0OiAzMHB4O1xyXG4gICAgICAgIHdpZHRoOiAzMHB4O1xyXG5cclxuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzdweCkge1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDI0cHg7XHJcbiAgICAgICAgICAgIHdpZHRoOiAyNHB4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuLnN0YXR1cy1wcm9ncmVzcyB7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG59XHJcblxyXG4uc3RhdHVzLXN0ZXAge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcblxyXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTc3cHgpIHtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIH1cclxufVxyXG5cclxuLmZpbHRlci1sYWJlbCB7XHJcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgfVxyXG59XHJcblxyXG4udmlldy1jbGFpbS1jYXJkcy1jb250YWluZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2VlZTtcclxuICAgIG1heC13aWR0aDogODAwcHg7XHJcbiAgICBwYWRkaW5nOiAkc3BhY2luZyoxLjUgJHNwYWNpbmcqMS41O1xyXG5cclxuICAgIC5wcm92aWRlci1jYXJkLWljb24ge1xyXG4gICAgICAgIC5pY29uLWNvbnRhaW5lci1yb3VuZGVkIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAwLjc1ZW07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU3N3B4KSB7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206ICRzcGFjaW5nO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgXHJcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzdweCkge1xyXG4gICAgICAgIHBhZGRpbmc6ICRzcGFjaW5nKjEuNTtcclxuICAgIH1cclxufVxyXG5cclxuLmljb24tY29udGFpbmVyLXJvdW5kZWQuc3RhdHVzIGkge1xyXG4gICAgZm9udC1zaXplOiAyLjVlbTtcclxufVxyXG5cclxuLnZpZXctY2xhaW0tbmFtZSB7XHJcbiAgICBsaW5lLWhlaWdodDogMS4wO1xyXG5cclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAkc3BhY2luZyoxLjU7XHJcbiAgICB9XHJcbn1cclxuXHJcbi52aWV3LWNsYWltLWRlc2Mge1xyXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU3N3B4KSB7XHJcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDEwcHg7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgIH1cclxuXHJcbiAgICBwIHtcclxuICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIH1cclxufVxyXG5cclxuLnZpZXctY2xpbmljIHtcclxuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xyXG5cclxuICAgIGkge1xyXG4gICAgICAgIGNvbG9yOiAjMEQ4ODBCO1xyXG4gICAgfVxyXG59XHJcblxyXG4udGV4dC1jbGluaWMge1xyXG4gICAgY29sb3I6IGJsYWNrO1xyXG59XHJcblxyXG4udmlldy1jbGFpbS1pbmZvIHtcclxuICAgIGxpbmUtaGVpZ2h0OiAxLjA7XHJcbn1cclxuXHJcbi5jbGFpbS1kZXRhaWxzIHtcclxuICAgIHBhZGRpbmctbGVmdDogMTBweDtcclxufVxyXG5cclxuLmFtb3VudC1iaWxsZWQtZGV0YWlscyB7XHJcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzdweCkge1xyXG4gICAgICAgIHBhZGRpbmctbGVmdDogMHB4O1xyXG4gICAgfVxyXG59XHJcblxyXG4uYW1vdW50LWJpbGxlZC1kZXRhaWxzLCAuYW1vdW50LXBhaWQtZGV0YWlscyB7XHJcbiAgICBsaW5lLWhlaWdodDogMS4wO1xyXG59XHJcblxyXG4udmlldy1jbGFpbS12YWx1ZXMge1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuXHJcbiNhbW91bnQsICNwYXltZW50LW51bWJlciB7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxufVxyXG5cclxuI2N1cnJlbmN5LCAjZG9sbGFyIHtcclxuICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59XHJcblxyXG4uYnRuLWJlbmVmaXRzIHtcclxuICAgIHdoaXRlLXNwYWNlOiBub3JtYWw7XHJcbn1cclxuXHJcbi5jbGFpbS1jaGVjayB7XHJcbiAgICBzdmcge1xyXG4gICAgICAgIGNvbG9yOiAjMTk2RUNGO1xyXG4gICAgICAgIGhlaWdodDogMzBweDtcclxuICAgICAgICB3aWR0aDogMzBweDtcclxuICAgIH1cclxufVxyXG5cclxuLnJlc2V0LWZpbHRlci1idG4ge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcblxyXG4iLCJcclxuLnZpZXctcmVpbWJ1cnNlbWVudC1jYXJkcy1jb250YWluZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2VlZTtcclxuICAgIG1heC13aWR0aDogODAwcHg7XHJcbiAgICBwYWRkaW5nOiAkc3BhY2luZyoxLjUgJHNwYWNpbmcqMS41O1xyXG5cclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU3N3B4KSB7XHJcbiAgICAgICAgcGFkZGluZzogJHNwYWNpbmcqMS41O1xyXG4gICAgfVxyXG59XHJcblxyXG4ucmVpbWJ1cnNlbWVudC1kZXRhaWxzIHtcclxuICAgIGxpbmUtaGVpZ2h0OiAxLjA7XHJcbn1cclxuXHJcbiNwYXlkYXRlLCAjcGF5dHlwZSwgI2NsYWltSWRMaXN0LCAjZGF0ZVNlcnZpY2Uge1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuXHJcbi5kaXNwbGF5LWNsYWltcy1udW1iZXIge1xyXG4gICAgc3ZnIHtcclxuICAgICAgICBjb2xvcjogIzBEODgwQjtcclxuICAgIH1cclxufSIsIiNiYW5rLWFjY291bnQge1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuXHJcbi5wYXltZW50LWRldGFpbHMge1xyXG4gICAgbGluZS1oZWlnaHQ6IDEuMDtcclxufSJdfQ== */

.progress-steps .progress-tracker--center .progress-step{
	flex-grow : 1;
	flex-shrink : 1;
	flex-basis : 0%;
}


.graphic-selector .selector {
    padding: 16px;
    border: #003DA1 1px solid;
    display: inline-block;
    text-align: center;
    cursor: pointer;
    height: 55px;
    width: 100%;
}

.edit-reimbursement-form-1 .text-danger{
	display:none;
}

.check-icon-ctn {
  position: relative;
  width: 100%; }
  .check-icon-ctn svg {
    position: absolute;
    top: 3px;
    left: -40px;
    width: 100% !important; 
   }
 
/* #warning-message-submit-claim-container .modal-close {
  height: 38px;
  width: 38px;
  min-width: 0;
  padding: 1px;
  background: url("../resources/images/icon-close.svg") 0 0 no-repeat;
  background-size: cover;
  border: none;
}

  
 #warning-message-submit-claim-container .modal-close:hover {
    background: url(expatportal/resources/images/icon-close-hover.svg) 0 0 no-repeat;
}
*/

/*p{
    overflow-wrap: break-word;
    word-break: break-all !important;
}

*/


@media (min-width: 992px){
.justify-content-lg-center.no-pref-container{
width: 78%;
margin: auto;
}
}