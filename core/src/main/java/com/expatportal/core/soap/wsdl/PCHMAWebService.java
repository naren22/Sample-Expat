package com.expatportal.core.soap.wsdl;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.5.7
 * 2019-07-21T22:35:47.410-05:00
 * Generated source version: 2.5.7
 * 
 */
@WebServiceClient(name = "PCH_MAWebService", 
                  wsdlLocation = "https://www.hovs-pch.com/PCHMA_SSP/PCH_MAWebService.asmx?wsdl",
                  targetNamespace = "http://tempuri.org/") 
public class PCHMAWebService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://tempuri.org/", "PCH_MAWebService");
    public final static QName PCHMAWebServiceSoap12 = new QName("http://tempuri.org/", "PCH_MAWebServiceSoap12");
    public final static QName PCHMAWebServiceSoap = new QName("http://tempuri.org/", "PCH_MAWebServiceSoap");
    public final static QName PCHMAWebServiceHttpPost = new QName("http://tempuri.org/", "PCH_MAWebServiceHttpPost");
    public final static QName PCHMAWebServiceHttpGet = new QName("http://tempuri.org/", "PCH_MAWebServiceHttpGet");
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/myfiles/AEM-EXCELA/excelawsdl.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(PCHMAWebService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/C:/myfiles/AEM-EXCELA/excelawsdl.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public PCHMAWebService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public PCHMAWebService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public PCHMAWebService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public PCHMAWebService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public PCHMAWebService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public PCHMAWebService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns PCHMAWebServiceSoap
     */
    @WebEndpoint(name = "PCH_MAWebServiceSoap12")
    public PCHMAWebServiceSoap getPCHMAWebServiceSoap12() {
        return super.getPort(PCHMAWebServiceSoap12, PCHMAWebServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PCHMAWebServiceSoap
     */
    @WebEndpoint(name = "PCH_MAWebServiceSoap12")
    public PCHMAWebServiceSoap getPCHMAWebServiceSoap12(WebServiceFeature... features) {
        return super.getPort(PCHMAWebServiceSoap12, PCHMAWebServiceSoap.class, features);
    }
    /**
     *
     * @return
     *     returns PCHMAWebServiceSoap
     */
    @WebEndpoint(name = "PCH_MAWebServiceSoap")
    public PCHMAWebServiceSoap getPCHMAWebServiceSoap() {
        return super.getPort(PCHMAWebServiceSoap, PCHMAWebServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PCHMAWebServiceSoap
     */
    @WebEndpoint(name = "PCH_MAWebServiceSoap")
    public PCHMAWebServiceSoap getPCHMAWebServiceSoap(WebServiceFeature... features) {
        return super.getPort(PCHMAWebServiceSoap, PCHMAWebServiceSoap.class, features);
    }
    /**
     *
     * @return
     *     returns PCHMAWebServiceHttpPost
     */
    @WebEndpoint(name = "PCH_MAWebServiceHttpPost")
    public PCHMAWebServiceHttpPost getPCHMAWebServiceHttpPost() {
        return super.getPort(PCHMAWebServiceHttpPost, PCHMAWebServiceHttpPost.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PCHMAWebServiceHttpPost
     */
    @WebEndpoint(name = "PCH_MAWebServiceHttpPost")
    public PCHMAWebServiceHttpPost getPCHMAWebServiceHttpPost(WebServiceFeature... features) {
        return super.getPort(PCHMAWebServiceHttpPost, PCHMAWebServiceHttpPost.class, features);
    }
    /**
     *
     * @return
     *     returns PCHMAWebServiceHttpGet
     */
    @WebEndpoint(name = "PCH_MAWebServiceHttpGet")
    public PCHMAWebServiceHttpGet getPCHMAWebServiceHttpGet() {
        return super.getPort(PCHMAWebServiceHttpGet, PCHMAWebServiceHttpGet.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PCHMAWebServiceHttpGet
     */
    @WebEndpoint(name = "PCH_MAWebServiceHttpGet")
    public PCHMAWebServiceHttpGet getPCHMAWebServiceHttpGet(WebServiceFeature... features) {
        return super.getPort(PCHMAWebServiceHttpGet, PCHMAWebServiceHttpGet.class, features);
    }

}
